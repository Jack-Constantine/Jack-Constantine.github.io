<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>England Trip</title>
    <link href="/2025/01/31/England-Trip/"/>
    <url>/2025/01/31/England-Trip/</url>
    
    <content type="html"><![CDATA[<h1 id="整体规划">整体规划</h1><iframe src="/route_map_full.html" width="100%" height="600px" style="border:none;"></iframe><h1 id="伦敦">伦敦</h1><iframe src="/route_map_Lodon.html" width="100%" height="600px" style="border:none;"></iframe><h1 id="曼彻斯特">曼彻斯特</h1><iframe src="/route_map_Manchester.html" width="100%" height="600px" style="border:none;"></iframe><h1 id="牛津">牛津</h1><iframe src="/route_map_Oxford.html" width="100%" height="600px" style="border:none;"></iframe><h1 id="剑桥">剑桥</h1><iframe src="/route_map_Cambridge.html" width="100%" height="600px" style="border:none;"></iframe><h1 id="约克">约克</h1><iframe src="/route_map_York.html" width="100%" height="600px" style="border:none;"></iframe><h1 id="巴斯">巴斯</h1><iframe src="/route_map_Bath.html" width="100%" height="600px" style="border:none;"></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Big Mouth Billy Bass</title>
    <link href="/2025/01/06/Big-Mouth-Billy-Bass/"/>
    <url>/2025/01/06/Big-Mouth-Billy-Bass/</url>
    
    <content type="html"><![CDATA[<h1 id="big-mouth-billy-bass">Big Mouth Billy Bass</h1><p>https://www.youtube.com/watch?v=RTwhn8-zvr8</p><p><ahref="https://maker.pro/arduino/projects/how-to-animate-billy-bass-with-bluetooth-audio-source">Howto Build Your Own Bluetooth Billy Bass | Masterclass Maker Projects  |Arduino | Maker Pro</a></p><h1 id="materials">Materials:</h1><ul class="task-list"><li><label><input type="checkbox" />Arduino</label></li><li><label><input type="checkbox" />Big Mouth Billy Bass</label></li><li><label><input type="checkbox" />MX1508驱动板</label></li><li><label><input type="checkbox" />PAM8406功放板</label></li><li><label><input type="checkbox" />Arduino Nano</label></li><li><label><input type="checkbox" />扬声器</label></li><li><label><input type="checkbox" />Micro USB板</label></li><li><label><input type="checkbox" />3.5mm公对公耳机音频线</label></li><li><label><input type="checkbox" />5k卧式电位器</label></li><li><label><input type="checkbox" />1000uF电容</label></li></ul><img src="/2025/01/06/Big-Mouth-Billy-Bass/1.png" class="" title="Big-Mouth-Billy-Bass">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实用网站</title>
    <link href="/2024/06/16/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    <url>/2024/06/16/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="实用网站汇总">实用网站汇总</h1><h1 id="前端">前端</h1><p><a href="https://uiverse.io/">Explore 3000+ Free UI Elements: CSS&amp; Tailwind (uiverse.io)</a></p><p><a href="http://layui.apixx.net/index.html">Layui中文网(apixx.net)</a></p><p><a href="https://refine.dev/?playground=true">Refine | Open-sourceRetool for Enterprise</a></p><p><a href="https://ui.shadcn.com/">shadcn/ui</a></p><p><a href="https://flowbite.com/">Flowbite - Build websites even fasterwith components on top of Tailwind CSS</a></p><p><a href="https://www.uiguideline.com/components">UI Guideline -Component Standardization</a></p><p><a href="https://loading.io/">loading.io - Your SVG + GIF + PNG AjaxLoading Icons and Animation Generator</a></p><p><a href="https://magicui.design/">Magic UI</a></p><p><a href="https://nextui.org/">NextUI - Beautiful, fast and modernReact UI Library</a></p><p><a href="https://htmlrev.com/">Free HTML Templates on HTMLrev</a></p><p><ahref="https://vant-ui.github.io/vant/?source=vuejsorg#/zh-CN/home">介绍- Vant 4 (vant-ui.github.io)</a></p><p><a href="https://didi.github.io/cube-ui/#/zh-CN">cube-ui Document(didi.github.io)</a></p><p><a href="https://www.patterns.dev/#pattern">Patterns.dev</a></p><p><a href="https://www.designevo.com/">Free Logo Maker, Create CustomLogo Designs Online – DesignEvo</a></p><h1 id="算法">算法</h1><p><a href="https://visualgo.net/zh">通过动画可视化数据结构和算法<br> -VisuAlgo</a></p><p><a href="https://programmercarl.com/">代码随想录(programmercarl.com)</a></p><p><a href="https://www.hello-algo.com/">Hello 算法(hello-algo.com)</a></p><h1 id="工具">工具</h1><p><a href="https://jsonhero.io/">JSON Viewer - JSON Hero</a></p><p><a href="https://drawdb.vercel.app/">drawDB | Online database diagrameditor and SQL generator</a></p><p><a href="https://www.marscode.com/home">MarsCode - AI IDE</a></p><h1 id="深度学习">深度学习</h1><p><a href="https://paperswithcode.com/">The latest in Machine Learning| Papers With Code</a></p><p><a href="https://www.connectedpapers.com/">Connected Papers | Findand explore academic papers</a></p><h1 id="硬件">硬件</h1><p><a href="https://wokwi.com/">Wokwi - Online ESP32, STM32, ArduinoSimulator</a></p><p><a href="https://www.tinkercad.com/">Tinkercad - From mind to designin minutes</a></p>]]></content>
    
    
    <categories>
      
      <category>常用工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站汇总</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>医学影像分割BCP</title>
    <link href="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/"/>
    <url>/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/</url>
    
    <content type="html"><![CDATA[<h1 id="bcp代码">BCP代码</h1><p><ahref="https://github.com/DeepMed-Lab-ECNU/BCP">https://github.com/DeepMed-Lab-ECNU/BCP</a></p><h1 id="安装">安装</h1><p>我的环境是Nvidian A10, CUDA11.2， Ubuntu20.04.</p><p>安装的时候一定有顺序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">Pytorch1<span class="hljs-number">.8</span><span class="hljs-number">.0</span><br>medpy<br>matplotlib<br>h5py<br>imageio<br>scikit-image<br>tqdm<br></code></pre></td></tr></table></figure><h1 id="代码调整">代码调整</h1><p><code>code/ACDC_BCP_train.py</code> 中 34行 改成这个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">parser.add_argument(<span class="hljs-string">&#x27;--root_path&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&#x27;data/byh_data/SSNet_data/ACDC&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;Name of Experiment&#x27;</span>)<br></code></pre></td></tr></table></figure><p>然后ACDC的数据需要放在 <code>data/byh_data/SSNet_data/ACDC</code>中</p><h1 id="数据格式acdc">数据格式ACDC</h1><h2 id="h5"><code>.h5</code></h2><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled.jpg" class="" title="医学影像分割BCP"><p>每个frame都有10个slice,每个slice都有 <code>image</code> 和<code>label</code> 两个</p><p><code>image</code> 是原始图像， <code>label</code>是分割的标注图像</p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_1.jpg" class="" title="医学影像分割BCP"><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_2.jpg" class="" title="医学影像分割BCP"><h2 id="已有的数据格式与维度">已有的数据格式与维度</h2><p>BHSD的数据集格式为 <code>.nii.gz</code> 并且维度有很多不同</p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_3.jpg" class="" title="医学影像分割BCP"><p>将每一个图像与其ground truth合并为一个 <code>.h5</code>文件，并且加上 <code>image</code>和 <code>label</code>标签</p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_4.jpg" class="" title="医学影像分割BCP"><p><code>slices</code> 中，是每层的图的单独图片，需要将所有的<code>nii.gz</code> 中的图都提出来，并把对应的层<code>ground truth</code> 和 <code>image</code> 对应上并保存为<code>.h5</code></p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_5.jpg" class="" title="医学影像分割BCP"><h1id="数据分类训练集测试集验证集">数据分类(训练集、测试集、验证集)</h1><p>问题在于，它的训练集不知道具体是怎么进行选择的</p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_6.jpg" class="" title="医学影像分割BCP"><p>计算了一下，数据集的划分比例是：训练集：测试集：验证集=7:2:1</p><p>我也把我的数据这么划分</p><p>然后把不同数据集的文件都写在了对应的 <code>.list</code>文件中，并且把属于 <code>train.list</code> 的所有 slices都写在了<code>train_slices.list</code> 中</p><p>共大小39个GB</p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_7.jpg" class="" title="医学影像分割BCP"><h1 id="代码修改的地方">代码修改的地方</h1><h2 id="codedataloadersdataset.py">./code/dataloaders/dataset.py</h2><h2 id="codebhsd_bcp_train.py">./code/BHSD_BCP_train.py</h2><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_8.jpg" class="" title="医学影像分割BCP"><p>265行跳入了 <code>unet.py</code> 中255行</p><img src="/2024/04/03/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2BCP/Untitled_9.jpg" class="" title="医学影像分割BCP">]]></content>
    
    
    <categories>
      
      <category>科研论文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>半监督分割模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode 452 用最少数量的箭引爆气球</title>
    <link href="/2023/12/24/LeetCode-452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/"/>
    <url>/2023/12/24/LeetCode-452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/</url>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>有一些球形气球贴在一堵用 XY平面表示的墙面上。墙面上的气球记录在整数数组 <code>points</code> ，其中<code>points[i] = [xstart, xend]</code> 表示水平直径在 <code>xstart</code> 和 <code>xend</code>之间的气球。你不知道气球的确切y 坐标。</p><p>一支弓箭可以沿着 x轴从不同点 <strong>完全垂直</strong> 地射出。在坐标 <code>x</code> 处射出一支箭，若有一个气球的直径的开始和结束坐标为 <code>xstart</code>，<code>xend</code>， 且满足 <code>xstart ≤ x ≤ xend</code>，则该气球会被 <strong>引爆</strong> 。可以射出的弓箭的数量 <strong>没有限制</strong> 。弓箭一旦被射出之后，可以无限地前进。</p><p>给你一个数组 <code>points</code> ，<em>返回引爆所有气球所必须射出的 <strong>最小</strong> 弓箭数</em> 。</p><p><strong>示例 1：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入：points = <span class="hljs-comment">[<span class="hljs-comment">[10,16]</span>,<span class="hljs-comment">[2,8]</span>,<span class="hljs-comment">[1,6]</span>,<span class="hljs-comment">[7,12]</span>]</span><br>输出：2<br>解释：气球可以用2支箭来爆破:<br>-在x = 6处射出箭，击破气球<span class="hljs-comment">[2,8]</span>和<span class="hljs-comment">[1,6]</span>。<br>-在x = 11处发射箭，击破气球<span class="hljs-comment">[10,16]</span>和<span class="hljs-comment">[7,12]</span>。<br></code></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入：points = <span class="hljs-comment">[<span class="hljs-comment">[1,2]</span>,<span class="hljs-comment">[3,4]</span>,<span class="hljs-comment">[5,6]</span>,<span class="hljs-comment">[7,8]</span>]</span><br>输出：4<br>解释：每个气球需要射出一支箭，总共需要4支箭。<br></code></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入：points = <span class="hljs-comment">[<span class="hljs-comment">[1,2]</span>,<span class="hljs-comment">[2,3]</span>,<span class="hljs-comment">[3,4]</span>,<span class="hljs-comment">[4,5]</span>]</span><br>输出：2<br>解释：气球可以用2支箭来爆破:<br>- 在x = 2处发射箭，击破气球<span class="hljs-comment">[1,2]</span>和<span class="hljs-comment">[2,3]</span>。<br>- 在x = 4处射出箭，击破气球<span class="hljs-comment">[3,4]</span>和<span class="hljs-comment">[4,5]</span>。<br></code></pre></td></tr></table></figure><h1 id="思路">思路</h1><img src="/2023/12/24/LeetCode-452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/1.jpg" class="" title="LeetCode-452-用最少数量的箭引爆气球"><p>我们可以随机射出一支箭，实际上把这支箭使劲往右移指导移到其中一个重叠气球区间的右边界就是箭向右移动的临界值。所以我们只需要先确定一个气球<code>A</code>的结尾，并加入下一个气球 <code>B</code>，如果新加的气球<code>A</code>的头大于 <code>B</code>的尾那么箭就需要再射一支，如果不大于那么就可以一箭双雕。</p><p>所以我们首先对气球区间根据气球的结尾进行排序，然后进行上述操作。最终得到结果</p><h1 id="代码">代码</h1><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @lc app=leetcode.cn id=452 lang=javascript</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * [452] 用最少数量的箭引爆气球</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">// @lc code=start</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * @param &#123;number[][]&#125; points</span><br><span class="hljs-comment"> * @return &#123;number&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> findMinArrowShots = <span class="hljs-keyword">function</span> (<span class="hljs-params">points</span>) &#123;<br>    points.<span class="hljs-built_in">sort</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>        <span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>] - b[<span class="hljs-number">1</span>];<br>    &#125;)<br>    let pos=points[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>];<br>    let ans=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (let balloon of points) &#123;<br>        <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;ballon[0] is &quot;</span>+ balloon[<span class="hljs-number">0</span>]);<br>        <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;pos is &quot;</span>+ pos);<br>        <span class="hljs-keyword">if</span>(balloon[<span class="hljs-number">0</span>]&gt;pos)<br>        &#123;<br>            pos=balloon[<span class="hljs-number">1</span>];<br>            ans++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(points);<br>    <span class="hljs-keyword">return</span> ans;<br>    <br>&#125;;<br><span class="hljs-comment">// @lc code=end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>贪心算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode 435 无重叠区间</title>
    <link href="/2023/12/24/LeetCode-435-%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/"/>
    <url>/2023/12/24/LeetCode-435-%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定一个区间的集合 <code>intervals</code> ，其中 <code>intervals[i] = [starti, endi]</code> 。返回 <em>需要移除区间的最小数量，使剩余区间互不重叠</em> 。</p><p><strong>示例 1:</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入: intervals = <span class="hljs-comment">[<span class="hljs-comment">[1,2]</span>,<span class="hljs-comment">[2,3]</span>,<span class="hljs-comment">[3,4]</span>,<span class="hljs-comment">[1,3]</span>]</span><br>输出: 1<br>解释: 移除 <span class="hljs-comment">[1,3]</span> 后，剩下的区间没有重叠。<br></code></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入: intervals = <span class="hljs-comment">[ <span class="hljs-comment">[1,2]</span>, <span class="hljs-comment">[1,2]</span>, <span class="hljs-comment">[1,2]</span> ]</span><br>输出: 2<br>解释: 你需要移除两个 <span class="hljs-comment">[1,2]</span> 来使剩下的区间没有重叠。<br></code></pre></td></tr></table></figure><p><strong>示例 3:</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">输入: intervals = <span class="hljs-comment">[ <span class="hljs-comment">[1,2]</span>, <span class="hljs-comment">[2,3]</span> ]</span><br>输出: 0<br>解释: 你不需要移除任何区间，因为它们已经是无重叠的了。<br></code></pre></td></tr></table></figure><h1 id="思路">思路</h1><p>首先先对这些区间根据结尾进行排序，得到排序数组</p><p>然后进行遍历，来删除区间，判断逻辑就是下一个区间的头是否小于前一个区间的尾。如果小于则重叠那么删除，如果不小于则不重叠，则该区间变成”前一个区间”，继续与下一个区间进行对比</p><h1 id="代码">代码</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @lc app=leetcode.cn id=435 lang=javascript</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * [435] 无重叠区间</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">// @lc code=start</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number[][]</span>&#125; <span class="hljs-variable">intervals</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">number</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> eraseOverlapIntervals = <span class="hljs-keyword">function</span> (<span class="hljs-params">intervals</span>) &#123;<br>    <span class="hljs-keyword">var</span> result = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//先根据结尾排序</span><br>    intervals.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>        <span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>] - b[<span class="hljs-number">1</span>];<br>    &#125;);<br>    <span class="hljs-comment">//遍历,并查看是否重叠,重叠则删,且前一项保持;不重叠则下一项变成前一项</span><br>    <span class="hljs-comment">//判断标准:下一项的开头比前一项的结尾小则重叠</span><br>    <span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;<br>    pre=intervals[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; intervals.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (intervals[i][<span class="hljs-number">0</span>]&lt;pre) &#123;<br>            result++;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            pre=intervals[i][<span class="hljs-number">1</span>];<br>        &#125;<br>        <br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;;<br><span class="hljs-comment">// @lc code=end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>贪心算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode 135 分发糖果</title>
    <link href="/2023/12/24/LeetCode-135-%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/"/>
    <url>/2023/12/24/LeetCode-135-%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p><code>n</code> 个孩子站成一排。给你一个整数数组 <code>ratings</code> 表示每个孩子的评分。</p><p>你需要按照以下要求，给这些孩子分发糖果：</p><ul><li>每个孩子至少分配到 <code>1</code> 个糖果。</li><li>相邻两个孩子评分更高的孩子会获得更多的糖果。</li></ul><p>请你给每个孩子分发糖果，计算并返回需要准备的 <strong>最少糖果数目</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs fix"><span class="hljs-attr">输入：ratings </span>=<span class="hljs-string"> [1,0,2]</span><br><span class="hljs-string">输出：5</span><br><span class="hljs-string">解释：你可以分别给第一个、第二个、第三个孩子分发 2、1、2 颗糖果。</span><br></code></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs fix"><span class="hljs-attr">输入：ratings </span>=<span class="hljs-string"> [1,2,2]</span><br><span class="hljs-string">输出：4</span><br><span class="hljs-string">解释：你可以分别给第一个、第二个、第三个孩子分发 1、2、1 颗糖果。</span><br><span class="hljs-string">     第三个孩子只得到 1 颗糖果，这满足题面中的两个条件。</span><br></code></pre></td></tr></table></figure><h1 id="思路">思路</h1><p>因为<code>n</code>个孩子至少要分配一个糖果所以首先令每个孩子的糖果数量都为1.</p><p>因为评分更高的孩子得到的糖果更多，所以先进行从左到右的遍历，如果右边孩子评分大于左边孩子则糖果数量加一</p><p>然后再从右到左遍历，如果左边孩子评分大于右边孩子则左边孩子的糖果变成右边孩子糖果加一</p><p>最终统计糖果数量得到答案</p><h1 id="代码">代码</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @lc app=leetcode.cn id=135 lang=javascript</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * [135] 分发糖果</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">// @lc code=start</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number[]</span>&#125; <span class="hljs-variable">ratings</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">number</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> candy = <span class="hljs-keyword">function</span>(<span class="hljs-params">ratings</span>) &#123;<br>    <span class="hljs-keyword">var</span> candy=[];<br>    <span class="hljs-keyword">var</span> count=<span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//初始化每个人都是一个糖果</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ratings.<span class="hljs-property">length</span>;i++)<br>    &#123;<br>        candy.<span class="hljs-title function_">push</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(candy);<br>    <span class="hljs-comment">//从左向右遍历,右大于左,右糖果+1</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;ratings.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(ratings[i+<span class="hljs-number">1</span>]&gt;ratings[i])<br>            candy[i+<span class="hljs-number">1</span>]=candy[i]+<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(candy);<br>    <span class="hljs-comment">//从右向左遍历,左大于右,且左糖果&lt;=右糖果,左糖果=右糖果+1</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=ratings.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(ratings[i-<span class="hljs-number">1</span>]&gt;ratings[i] &amp;&amp; candy[i-<span class="hljs-number">1</span>]&lt;=candy[i])<br>            candy[i-<span class="hljs-number">1</span>]=candy[i]+<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;candy.<span class="hljs-property">length</span>;i++)<br>    &#123;<br>        count+=candy[i];<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(candy);<br>    <span class="hljs-keyword">return</span> count;<br><br>&#125;;<br><span class="hljs-comment">// @lc code=end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>贪心算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode 455 分发饼干</title>
    <link href="/2023/12/24/LeetCode-455-%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/"/>
    <url>/2023/12/24/LeetCode-455-%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。</p><p>对每个孩子 <code>i</code>，都有一个胃口值 <code>g[i]</code>，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 <code>j</code>，都有一个尺寸 <code>s[j]</code> 。如果 <code>s[j] &gt;= g[i]</code>，我们可以将这个饼干 <code>j</code> 分配给孩子 <code>i</code> ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。</p><p><strong>示例 1:</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">输入: g = [1,2,3], s = [1,1]</span><br><span class="hljs-section">输出: 1</span><br><span class="hljs-section">解释:</span><br>你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。<br>虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。<br>所以你应该输出1。<br></code></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">输入: g = [1,2], s = [1,2,3]</span><br><span class="hljs-section">输出: 2</span><br><span class="hljs-section">解释:</span><br>你有两个孩子和三块小饼干，2个孩子的胃口值分别是1,2。<br>你拥有的饼干数量和尺寸都足以让所有孩子满足。<br>所以你应该输出2.<br></code></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= g.length &lt;= 3 * 104</code></li><li><code>0 &lt;= s.length &lt;= 3 * 104</code></li><li><code>1 &lt;= g[i], s[j] &lt;= 231 - 1</code></li></ul><h1 id="思路">思路</h1><p>这里采用贪心算法的思路： <strong>每一步都选取局部最优解</strong>的思想进行解题。</p><p>为了满足更多的孩子，我们应该先利用最小的饼干来满足最小胃口的孩子。之后每一步都这么做。</p><p>所以先对饼干大小和孩子胃口进行排序(很多解题的第一步)，得到两个升序数组。之后通过每次都尝试满足胃口最小的孩子来进行喂食。每满足一个孩子就将结果+1。最终得到答案</p><h1 id="代码">代码</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @lc app=leetcode.cn id=455 lang=javascript</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * [455] 分发饼干</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">// @lc code=start</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number[]</span>&#125; <span class="hljs-variable">g</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number[]</span>&#125; <span class="hljs-variable">s</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">number</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> findContentChildren = <span class="hljs-keyword">function</span>(<span class="hljs-params">g, s</span>) &#123;<br>    g.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)&#123;<br>        <span class="hljs-keyword">return</span> a-b;<br>    &#125;);<br>    s.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)&#123;<br>        <span class="hljs-keyword">return</span> a-b;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> count=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(g);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i&lt;g.<span class="hljs-property">length</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(;j&lt;s.<span class="hljs-property">length</span>;)<br>        &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(j);<br>            <span class="hljs-keyword">if</span>(s[j]&gt;=g[i])<br>            &#123;<br>                count++;<br>                j++;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            j++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> count;<br>&#125;;<br><span class="hljs-comment">// @lc code=end</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode题解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>贪心算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NeoVim配置</title>
    <link href="/2023/11/25/NeoVim%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/25/NeoVim%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="neovim配置">NeoVim配置</h1><h1 id="neovim是什么">NeoVim是什么？</h1><p>不百度，只说我的理解：是一个 <strong>个性化极强的,上手难度极大的</strong>, <strong>不太适配windows的</strong><strong>文本编辑器</strong></p><p>虽然说是文本编辑器，但其具有非常活跃的社区去开发插件，于是其插件非常多，也非常强大</p><h1 id="系统环境">系统环境</h1><p>Ubuntu 22.0.4</p><h1 id="安装gcc和cmake">安装GCC和CMake</h1><h2 id="安装gcc">安装GCC</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install build-essential<br>sudo apt-get install manpages-dev<br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gcc --version<br></code></pre></td></tr></table></figure><h2 id="安装cmake">安装CMake</h2><p>首先卸载掉默认的CMake版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt remove --purge --auto-remove cmake<br></code></pre></td></tr></table></figure><p>下载另一个库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; \<br>sudo apt install -y software-properties-common lsb-release &amp;&amp; \<br>sudo apt clean all<br></code></pre></td></tr></table></figure><p>然后获得Kitware的key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2&gt;/dev/null | gpg --dearmor - | sudo <span class="hljs-built_in">tee</span> /etc/apt/trusted.gpg.d/kitware.gpg &gt;/dev/null<br></code></pre></td></tr></table></figure><p>将Kitware’s repository 加入到我们的库中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-add-repository <span class="hljs-string">&quot;deb https://apt.kitware.com/ubuntu/ <span class="hljs-subst">$(lsb_release -cs)</span> main&quot;</span><br></code></pre></td></tr></table></figure><p>开始下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install kitware-archive-keyring<br>sudo <span class="hljs-built_in">rm</span> /etc/apt/trusted.gpg.d/kitware.gpg<br></code></pre></td></tr></table></figure><p>复制key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6AF7F09730B3F0A4<br></code></pre></td></tr></table></figure><p>下载CMake</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install cmake<br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cmake --version<br></code></pre></td></tr></table></figure><h1 id="下载一些必要的软件">下载一些必要的软件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install ninja-build gettext libtool-bin cmake g++ pkg-config unzip curl<br></code></pre></td></tr></table></figure><h1 id="安装neovim">安装NeoVim</h1><p>首先从github上下载代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/neovim/neovim<br></code></pre></td></tr></table></figure><p>然后再目录里跑CMake</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> neovim &amp;&amp; make CMAKE_BUILD_TYPE=RelWithDebInfo<br></code></pre></td></tr></table></figure><p>获得Stable版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout stable<br></code></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo make install<br></code></pre></td></tr></table></figure><img src="/2023/11/25/NeoVim%E9%85%8D%E7%BD%AE/1.jpg" class="" title="NeoVim配置"><h1 id="授权neovim">授权NeoVim</h1><p>如果 <code>nvim</code> 命令不可用，需要去改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/bin<br>sudo <span class="hljs-built_in">chmod</span> u+x nvim<br><br></code></pre></td></tr></table></figure><h1 id="配置插件">配置插件</h1><p>配置文件在 <code>~/.config/nvim</code>里，但默认应该是没有这个文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/.config<br><span class="hljs-built_in">mkdir</span> nvim<br><span class="hljs-built_in">touch</span> init.lua<br></code></pre></td></tr></table></figure><p>我的目录是这样的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvim<br>    ├── init.lua<br>    ├── lua<br>    │   └── v9<br>    │       ├── keymaps.lua<br>    │       ├── lsp<br>    │       │   ├── cmp.lua<br>    │       │   ├── handlers.lua<br>    │       │   └── init.lua<br>    │       ├── plugin_config<br>    │       │   ├── bufferline.lua<br>    │       │   ├── gruvbox.lua<br>    │       │   ├── lualine.lua<br>    │       │   └── nvim-tree.lua<br>    │       └── plugins.lua<br>    └── plugin<br>        └── packer_compiled.lua<br></code></pre></td></tr></table></figure><h2 id="keymaps和plugins">keymaps和plugins</h2><p>首先需要创建这两个文件</p><p><code>keymaps</code> 中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">local</span> <span class="hljs-built_in">set</span>=vim.opt<br><br>vim.wo.number=<span class="hljs-literal">true</span><br><br>set.backspace=<span class="hljs-string">&#x27;2&#x27;</span><br>set.showcmd=<span class="hljs-literal">true</span><br>set.laststatus=2<br>set.autowrite=<span class="hljs-literal">true</span><br>set.autoread=<span class="hljs-literal">true</span><br><br>set.tabstop=2<br>set.shiftwidth=2<br>set.shiftround=<span class="hljs-literal">true</span><br>set.expandtab=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><code>init.lua</code> 中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">require(<span class="hljs-string">&quot;v9.keymaps&quot;</span>)<br></code></pre></td></tr></table></figure><p>需要执行 <code>:source %</code> 来生效</p><p>之后在 <code>plugins.lua</code> 中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">local</span> ensure_packer = <span class="hljs-keyword">function</span>()<br>  <span class="hljs-built_in">local</span> fn = vim.fn<br>  <span class="hljs-built_in">local</span> install_path = fn.stdpath(<span class="hljs-string">&#x27;data&#x27;</span>)..<span class="hljs-string">&#x27;/site/pack/packer/start/packer.nvim&#x27;</span><br>  <span class="hljs-keyword">if</span> fn.empty(fn.glob(install_path)) &gt; 0 <span class="hljs-keyword">then</span><br>    fn.system(&#123;<span class="hljs-string">&#x27;git&#x27;</span>, <span class="hljs-string">&#x27;clone&#x27;</span>, <span class="hljs-string">&#x27;--depth&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;https://github.com/wbthomason/packer.nvim&#x27;</span>, install_path&#125;)<br>    vim.cmd [[packadd packer.nvim]]<br>    <span class="hljs-built_in">return</span> <span class="hljs-literal">true</span><br>  end<br>  <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span><br>end<br><br><span class="hljs-built_in">local</span> packer_bootstrap = ensure_packer()<br><br><span class="hljs-built_in">return</span> require(<span class="hljs-string">&#x27;packer&#x27;</span>).startup(<span class="hljs-keyword">function</span>(use)<br><br>  use <span class="hljs-string">&#x27;wbthomason/packer.nvim&#x27;</span><br><br>  use <span class="hljs-string">&#x27;ellisonleao/gruvbox.nvim&#x27;</span><br>  use <span class="hljs-string">&#x27;nvim-tree/nvim-tree.lua&#x27;</span><br>  use <span class="hljs-string">&#x27;neovim/nvim-lspconfig&#x27;</span><br>  use <span class="hljs-string">&#x27;williamboman/mason.nvim&#x27;</span><br>  use <span class="hljs-string">&#x27;williamboman/mason-lspconfig.nvim&#x27;</span><br>  use <span class="hljs-string">&#x27;kosayoda/nvim-lightbulb&#x27;</span><br>  use <span class="hljs-string">&#x27;ray-x/lsp_signature.nvim&#x27;</span><br>  use <span class="hljs-string">&#x27;rmagatti/alternate-toggler&#x27;</span><br>  use <span class="hljs-string">&#x27;windwp/nvim-autopairs&#x27;</span><br>  use <span class="hljs-string">&#x27;mg979/vim-visual-multi&#x27;</span><br>  use <span class="hljs-string">&#x27;gcmt/wildfire.vim&#x27;</span><br>  use <span class="hljs-string">&#x27;tpope/vim-surround&#x27;</span><br>  <br>  use&#123;<br>      <span class="hljs-string">&#x27;nvim-lualine/lualine.nvim&#x27;</span>,<br>      requires = &#123;<br>        <span class="hljs-string">&#x27;kyazdani42/nvim-web-devicons&#x27;</span>,<br>        opt = <span class="hljs-literal">true</span><br>      &#125;<br>    &#125;<br><br>  use <span class="hljs-string">&#x27;akinsho/bufferline.nvim&#x27;</span><br><br>  use &#123;<br>  <span class="hljs-string">&#x27;nvim-telescope/telescope.nvim&#x27;</span>,tag = <span class="hljs-string">&#x27;0.1.1&#x27;</span>,<br>  requires =&#123;&#123;<span class="hljs-string">&#x27;nvim-lua/plenary.nvim&#x27;</span>&#125;&#125;<br>  &#125;<br><br>  use <span class="hljs-string">&#x27;hrsh7th/cmp-nvim-lsp&#x27;</span><br>  use <span class="hljs-string">&#x27;hrsh7th/cmp-buffer&#x27;</span><br>  use <span class="hljs-string">&#x27;hrsh7th/cmp-path&#x27;</span><br>  use <span class="hljs-string">&#x27;hrsh7th/cmp-cmdline&#x27;</span><br>  use <span class="hljs-string">&#x27;hrsh7th/nvim-cmp&#x27;</span><br>  use <span class="hljs-string">&#x27;hrsh7th/cmp-nvim-lua&#x27;</span><br>  use <span class="hljs-string">&#x27;L3MON4D3/LuaSnip&#x27;</span><br>  use <span class="hljs-string">&#x27;saadparwaiz1/cmp_luasnip&#x27;</span><br>  use <span class="hljs-string">&#x27;onsails/lspkind-nvim&#x27;</span><br>  use <span class="hljs-string">&#x27;jose-elias-alvarez/null-ls.nvim&#x27;</span><br>  use <span class="hljs-string">&#x27;terrortylor/nvim-comment&#x27;</span><br><br>  <span class="hljs-keyword">if</span> packer_bootstrap <span class="hljs-keyword">then</span><br>    require(<span class="hljs-string">&#x27;packer&#x27;</span>).<span class="hljs-built_in">sync</span>()<br>  end<br>end)<br></code></pre></td></tr></table></figure><blockquote><p>这里面都是我安装的插件，想要改的，可以在进行修改</p></blockquote><p>每次配置完插件都需要 <code>:PackerSync</code> 进行安装/升级</p><p><code>init.lua</code> 中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">require(<span class="hljs-string">&quot;v9.keymaps&quot;</span>)<br>require(<span class="hljs-string">&quot;v9.plugins&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="nvim-tree">nvim-tree</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim.g.loaded_netrw = 1<br>vim.g.loaded_netrwPlugin = 1<br><br>require(<span class="hljs-string">&quot;nvim-tree&quot;</span>).setup(&#123;<br>  view = &#123;<br>    adaptive_size = <span class="hljs-literal">true</span>,<br>    signcolumn = <span class="hljs-string">&quot;yes&quot;</span><br>  &#125;<br>&#125;)<br><br>vim.keymap.set(<span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;&lt;c-b&gt;&#x27;</span>, <span class="hljs-string">&#x27;:NvimTreeFindFileToggle&lt;CR&gt;&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="lualine">lualine</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">require(<span class="hljs-string">&#x27;lualine&#x27;</span>).setup &#123;<br>  options = &#123;<br>    icons_enabled = <span class="hljs-literal">true</span>,<br>    theme = <span class="hljs-string">&#x27;dracula&#x27;</span>,<br>  &#125;,<br>  sections = &#123;<br>    lualine_a = &#123;<br>      &#123;<br>        <span class="hljs-string">&#x27;filename&#x27;</span>,<br>        path = 1,<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="gruvbox">gruvbox</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim.o.termguicolors = <span class="hljs-literal">true</span><br>vim.cmd [[ colorscheme gruvbox ]]<br></code></pre></td></tr></table></figure><h2 id="buffline">buffline</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">local</span> status, bufferline = pcall(require, <span class="hljs-string">&quot;bufferline&quot;</span>)<br><span class="hljs-keyword">if</span> not status <span class="hljs-keyword">then</span><br>    vim.notify(<span class="hljs-string">&quot;没有找到 bufferline&quot;</span>)<br>  <span class="hljs-built_in">return</span><br>end<br> <br>bufferline.setup(&#123;<br>options = &#123;<br>    close_command = <span class="hljs-string">&quot;bdelete! %d&quot;</span>,       -- 点击关闭按钮关闭<br>right_mouse_command = <span class="hljs-string">&quot;bdelete! %d&quot;</span>, -- 右键点击关闭<br>indicator = &#123;<br>icon = <span class="hljs-string">&#x27;▎&#x27;</span>, -- 分割线<br>style = <span class="hljs-string">&#x27;underline&#x27;</span>,<br>&#125;,<br>buffer_close_icon = <span class="hljs-string">&#x27;󰅖&#x27;</span>,<br>modified_icon = <span class="hljs-string">&#x27;●&#x27;</span>,<br>close_icon = <span class="hljs-string">&#x27;&#x27;</span>,<br>offsets = &#123;<br>&#123;<br>filetype = <span class="hljs-string">&quot;NvimTree&quot;</span>,<br>text = <span class="hljs-string">&quot;File Explorer&quot;</span>,<br>text_align = <span class="hljs-string">&quot;left&quot;</span>,<br>separator = <span class="hljs-literal">true</span>,<br>&#125;,<br>&#125;,<br>&#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><h1 id="下载nerd-font">下载Nerd Font</h1><p>很多图标和字符显示不出来，是因为没有正确的字体，所以需要下载NerdFont</p><p>官网是： <a href="https://www.nerdfonts.com/">[NerdFont官网](https://www.nerdfonts.com)</a></p><p>我这里用的是 JetBrains Mono Nerd Font (真的很喜欢Jetbrains的字体)</p><img src="/2023/11/25/NeoVim%E9%85%8D%E7%BD%AE/2.jpg" class="" title="NeoVim配置"><p>要是远程访问的话，需要配置SSH工具的字体</p><p>一套下来，基本你的界面就是这样的了</p><img src="/2023/11/25/NeoVim%E9%85%8D%E7%BD%AE/3.jpg" class="" title="NeoVim配置"><p>是不是超级好看！我真的好喜欢这个配色，让人很舒服</p><h1 id="lsp配置">LSP配置</h1><p>还没太弄明白，弄明白了再回来更新</p>]]></content>
    
    
    <categories>
      
      <category>常用工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NeoVim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker常用命令</title>
    <link href="/2023/11/22/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/11/22/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React学习之路</title>
    <link href="/2023/11/22/React%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <url>/2023/11/22/React%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git常用命令</title>
    <link href="/2023/11/19/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/11/19/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="创建仓库时">创建仓库时</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br>git remote add origin git@github.com:xxx.git<br></code></pre></td></tr></table></figure><h1 id="统计代码量">统计代码量</h1><h2 id="所有人代码量">所有人代码量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --format=<span class="hljs-string">&#x27;%aN&#x27;</span> | <span class="hljs-built_in">sort</span> -u | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> name; <span class="hljs-keyword">do</span> <span class="hljs-built_in">echo</span> -en <span class="hljs-string">&quot;<span class="hljs-variable">$name</span>\t&quot;</span>; git <span class="hljs-built_in">log</span> --author=<span class="hljs-string">&quot;<span class="hljs-variable">$name</span>&quot;</span> --pretty=tformat: --numstat | awk <span class="hljs-string">&#x27;&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf &quot;added lines: %s, removed lines: %s, total lines: %s\n&quot;, add, subs, loc &#125;&#x27;</span> -; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h2 id="某个人代码量">某个人代码量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --author=<span class="hljs-string">&quot;xxx&quot;</span> --pretty=tformat: --numstat | awk <span class="hljs-string">&#x27;&#123; add += $1; subs += $2; loc += $1 - $2 &#125; END &#123; printf &quot;added lines: %s, removed lines: %s, total lines: %s\n&quot;, add, subs, loc &#125;&#x27;</span> -<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常用工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue学习之路</title>
    <link href="/2023/11/05/Vue%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <url>/2023/11/05/Vue%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="准备工作">准备工作</h1><h2 id="安装vue">安装vue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g @vue/cli<br></code></pre></td></tr></table></figure><h2 id="测试安装">测试安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vue --version<br></code></pre></td></tr></table></figure><h2 id="创建项目">创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vue create vue-demo<br></code></pre></td></tr></table></figure><h1 id="模板语法">模板语法</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>模板语法<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123;hello&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123;number+1&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;rawHtml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">msg</span>:<span class="hljs-string">&quot;神奇的语法&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">hello</span>:<span class="hljs-string">&quot;hello World&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">number</span>:<span class="hljs-number">10</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">rawHtml</span>:<span class="hljs-string">&quot;&lt;a href=&#x27;https://baidu.com&#x27;&gt;百度&lt;/a&gt;&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>通过 <code>&#123;&#123;&#125;&#125;</code>来显示，里边可加单行的逻辑也可以加属性</p><h1 id="属性绑定">属性绑定</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-bind:class</span>=<span class="hljs-string">&quot;Class&quot;</span> <span class="hljs-attr">v-bind:id</span>=<span class="hljs-string">&quot;ID&quot;</span>&gt;</span>&#123;&#123;Hello&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;IsButtonDisabled&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;BtnClass&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;objectAttr&quot;</span>&gt;</span>DIV content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">return</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title class_">Class</span>:<span class="hljs-string">&quot;active&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title class_">Hello</span>:<span class="hljs-string">&quot;Hello World&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">ID</span>:<span class="hljs-string">&quot;dynamicId&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title class_">IsButtonDisabled</span>:<span class="hljs-string">&quot;true&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title class_">BtnClass</span>:<span class="hljs-string">&quot;btnclass&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">objectAttr</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">id</span>:<span class="hljs-string">&quot;appId&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">class</span>:<span class="hljs-string">&quot;appClass&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml">  <span class="hljs-selector-class">.active</span>&#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">color</span>: antiquewhite;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">font-size</span>: large;</span></span><br><span class="language-css"><span class="language-xml">  &#125;</span></span><br><span class="language-css"><span class="language-xml">  <span class="hljs-selector-class">.btnclass</span>&#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">color</span>: white;</span></span><br><span class="language-css"><span class="language-xml">  &#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>使用 <code>v-bind:</code> 进行属性渲染，也可以直接用<code>:</code></p><h1 id="条件绑定">条件绑定</h1><h2 id="v-if"><code>v-if</code></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>条件渲染<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;flag&quot;</span>&gt;</span>see see me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">flag</span>:<span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p><code>flag</code> 为 true 时候显示，false时不显示</p></blockquote><h2 id="v-else"><code>v-else</code></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>条件渲染<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;flag&quot;</span>&gt;</span>see see me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>see see you<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">flag</span>:<span class="hljs-literal">false</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p><code>v-if</code> 不显示时， <code>v-else</code> 显示</p></blockquote><h2 id="v-else-if"><code>v-else-if</code></h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;template&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>条件渲染<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;flag&quot;</span>&gt;</span>see see me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>see see you<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;type===&#x27;A&#x27;&quot;</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;type===&#x27;B&#x27;&quot;</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;type===&#x27;C&#x27;&quot;</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span> Not ABC <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">flag</span>:<span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">type</span>:<span class="hljs-string">&#x27;D&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><code>v-show</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;template&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>条件渲染<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;flag&quot;</span>&gt;</span>see see me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>see see you<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;type===&#x27;A&#x27;&quot;</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;type===&#x27;B&#x27;&quot;</span>&gt;</span>B<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;type===&#x27;C&#x27;&quot;</span>&gt;</span>C<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span> Not ABC <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;flag&quot;</span>&gt;</span>Can can him<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">flag</span>:<span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">type</span>:<span class="hljs-string">&#x27;D&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>与 <code>v-if</code> 类似</p><p><code>v-show</code> 不管flase还是true 都会渲染，而 <code>v-if</code>只看条件，如果为真才渲染</p><h1 id="列表渲染">列表渲染</h1>]]></content>
    
    
    <categories>
      
      <category>学习之路</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript学习之路</title>
    <link href="/2023/10/22/JavaScript%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <url>/2023/10/22/JavaScript%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="javascript学习之路">JavaScript学习之路</h1><p>3️⃣ 学习前端知识的第三步，学习JavaScript!</p><h1 id="字符串方法">字符串方法</h1><h2 id="返回指定位置的字符charart">返回指定位置的字符charArt()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str=<span class="hljs-string">&quot;xshuisahd&quot;</span>;<br>str.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">1</span>);<span class="hljs-comment">//s</span><br></code></pre></td></tr></table></figure><h2 id="连接两个字符串concat">连接两个字符串concat()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;abc&quot;</span>;<br><span class="hljs-keyword">var</span> str2 = <span class="hljs-string">&quot;def&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1.<span class="hljs-title function_">concat</span>(str2));<span class="hljs-comment">//abcdef</span><br></code></pre></td></tr></table></figure><blockquote><p>如果不是字符串，则先转变成字符串再连接</p></blockquote><blockquote><p>字符串相连可以直接用+</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;abc&quot;</span>;<br><span class="hljs-keyword">var</span> str2 = <span class="hljs-string">&quot;def&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1 + str2);<span class="hljs-comment">//abcdef</span><br></code></pre></td></tr></table></figure><h2 id="截取字符串substring">截取字符串substring()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;abcdefg&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1.<span class="hljs-title function_">substring</span>(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>));<span class="hljs-comment">//bcde</span><br></code></pre></td></tr></table></figure><blockquote><p>左闭右开</p></blockquote><blockquote><p>第二个参数不写，默认到字符串末尾</p></blockquote><h2id="确定一个字符串在另一个字符串中第一个出现的位置indexof">确定一个字符串在另一个字符串中第一个出现的位置indexOf()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;abcdefg&quot;</span>;<br><span class="hljs-keyword">var</span> str2 = <span class="hljs-string">&#x27;e&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1.<span class="hljs-title function_">indexOf</span>(str2));<span class="hljs-comment">//4</span><br></code></pre></td></tr></table></figure><blockquote><p>匹配不成功返回-1</p></blockquote><h2 id="去除字符串的空格trim">去除字符串的空格trim()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;  abcdefg  &quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1.<span class="hljs-title function_">trim</span>());<br><span class="hljs-comment">//   abcdefg   </span><br><span class="hljs-comment">//abcdefg</span><br></code></pre></td></tr></table></figure><blockquote><p>换行符、制表符、换行符都被去除</p></blockquote><h2 id="分割字符串split">分割字符串split()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str1 = <span class="hljs-string">&quot;ab|c|def|g&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;|&#x27;</span>));<span class="hljs-comment">//[ &#x27;ab&#x27;, &#x27;c&#x27;, &#x27;def&#x27;, &#x27;g&#x27; ]</span><br></code></pre></td></tr></table></figure><blockquote><p>返回数组</p></blockquote><blockquote><p>如果分割规则为空，则返回数组为每个字符</p></blockquote><blockquote><p>也接受第二个参数，可以限制返回的数组成员数</p></blockquote><h1 id="数组方法">数组方法</h1><h2 id="判断数组-array.isarray">判断数组 Array.isArray()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(str2));<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h2id="在末端添加一个或多个元素push">在末端添加一个或多个元素push()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">push</span>(<span class="hljs-number">40</span>));<span class="hljs-comment">//4</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 20, 30, 40 ]</span><br></code></pre></td></tr></table></figure><p>返回值为新数组长度</p><h2 id="在末端删除一个元素pop">在末端删除一个元素pop()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">pop</span>());<span class="hljs-comment">//30</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 20 ]</span><br></code></pre></td></tr></table></figure><p>返回值为末端元素</p><h2 id="删除第一个元素shift">删除第一个元素shift()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">shift</span>());<span class="hljs-comment">//10</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 20, 30 ]</span><br></code></pre></td></tr></table></figure><p>可以用该方法来清空数组</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 20, 30 ]</span><br><span class="hljs-keyword">var</span> item;<br><span class="hljs-keyword">while</span> (item = str2.<span class="hljs-title function_">shift</span>()) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(item);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="在第一个元素前加元素unshift">在第一个元素前加元素unshift()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 20, 30 ]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">unshift</span>(<span class="hljs-number">50</span>))<span class="hljs-comment">//4</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 50, 10, 20, 30 ]</span><br></code></pre></td></tr></table></figure><p>返回值为新数组长度</p><p>也可以多个参数，就添加多个元素</p><h2id="以某个规则将所有数组成员连接为字符串join">以某个规则将所有数组成员连接为字符串join()</h2><p>默认用逗号分隔</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 20, 30 ]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;|&#x27;</span>));<span class="hljs-comment">//10|20|30</span><br></code></pre></td></tr></table></figure><blockquote><p>join和split可以实现字符串和数组的互相转换</p></blockquote><h2 id="数组合并concat">数组合并concat()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>];<br><span class="hljs-keyword">var</span> str1 = [<span class="hljs-number">90</span>, <span class="hljs-number">40</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 20, 30 ]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">concat</span>(str1));<span class="hljs-comment">//[ 10, 20, 30, 90, 40 ]</span><br></code></pre></td></tr></table></figure><p>也可以实现多个数组的合并</p><h2 id="颠倒排列数组reverse">颠倒排列数组reverse()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">40</span>, <span class="hljs-number">30</span>];<br><span class="hljs-keyword">var</span> str1 = [<span class="hljs-number">90</span>, <span class="hljs-number">40</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 40, 30 ]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">reverse</span>());<span class="hljs-comment">//[ 30, 40, 10 ]</span><br></code></pre></td></tr></table></figure><h2id="查找元素在数组中第一次出现的位置indexof">查找元素在数组中第一次出现的位置indexOf()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str2 = [<span class="hljs-number">10</span>, <span class="hljs-number">40</span>, <span class="hljs-number">30</span>];<br><span class="hljs-keyword">var</span> str1 = [<span class="hljs-number">90</span>, <span class="hljs-number">40</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//[ 10, 40, 30 ]</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2.<span class="hljs-title function_">indexOf</span>(<span class="hljs-number">40</span>));<span class="hljs-comment">//1</span><br></code></pre></td></tr></table></figure><p>第二个参数表示，搜索的开始位置</p><h1 id="函数">函数</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">x, y</span>) &#123;<br>    <span class="hljs-keyword">return</span> x + y;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">add</span>(<span class="hljs-number">50</span>, <span class="hljs-number">100</span>));<br></code></pre></td></tr></table></figure><h1 id="面向对象">面向对象</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Jack&quot;</span>,<br>    <span class="hljs-attr">getName</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>;<br>    &#125;<br>&#125;;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user.<span class="hljs-title function_">getName</span>());<span class="hljs-comment">//Jack</span><br></code></pre></td></tr></table></figure><blockquote><p>类方法需要将名字提前</p></blockquote><h2 id="链式调用">链式调用</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Jack&quot;</span>,<br>    <span class="hljs-attr">getName</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>;<br>    &#125;,<br>    <span class="hljs-attr">container</span>: &#123;<br>        <span class="hljs-attr">frontEnd</span>: <span class="hljs-string">&quot;前端&quot;</span>,<br>        <span class="hljs-attr">backEnd</span>: [<span class="hljs-string">&quot;python&quot;</span>, <span class="hljs-string">&quot;java&quot;</span>]<br>    &#125;<br>&#125;;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user.<span class="hljs-title function_">getName</span>());<span class="hljs-comment">//Jack</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user.<span class="hljs-property">container</span>.<span class="hljs-property">backEnd</span>)<span class="hljs-comment">//[ &#x27;python&#x27;, &#x27;java&#x27; ]</span><br></code></pre></td></tr></table></figure><h1 id="math对象">Math对象</h1><ol type="1"><li><code>Math.abs()</code></li><li><code>Math.max()</code> <code>Math.min()</code></li><li><code>Math.floor()</code> <code>Math.ceil()</code>向下取整和向上取整</li><li><code>Math.random()</code> 返回0-1之间一个伪随机数</li></ol><p>返回任意范围的随机数函数：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getRandom</span>(<span class="hljs-params">min, max</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (max - min) + min;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="date对象">Date对象</h1><ol type="1"><li><code>Date.now()</code>返回值为当前时间距离时间零点(1970年1月1日)的毫秒数</li><li>提供多种函数，来返回时间的分钟，小时，日期等等</li></ol><img src="/2023/10/22/JavaScript%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/1.jpg" class="" title="JavaScript学习之路"><h1 id="dom概述">DOM概述</h1><p>文档对象模型(Document Object Model)是JavaScript操作页面的接口</p><h1 id="document对象">Document对象</h1><h2 id="获取元素">获取元素</h2><h3id="document.getelementsbytagname">document.getElementsByTagName()</h3><p>获取符合标签名称的元素，返回值类似数组对象(HTMLCollection对象)</p><h3id="document.getelementsbyclassname">document.getElementsByClassName()</h3><p>获取符合类名的元素</p><h3 id="document.getelementsbyname">document.getElementsByName()</h3><p>获取符合名字的元素</p><h3 id="document.getelementbyid">document.getElementById()</h3><p>根据Id来获取元素，Id为唯一的，所以可以获取单独获取</p><h3 id="document.queryselector">document.querySelector()</h3><p>接受一个CSS选择器作为参数，返回匹配该选择器的元素节点。如果多个节点满足要求，则返回第一个</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> el1 = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.text&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="document.queryselectorall">document.querySelectorAll()</h3><p>返回所有节点</p><h2 id="创建元素">创建元素</h2><h3 id="document.createelement">document.createElement()</h3><p>创建元素节点，并返回该节点</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> newdiv = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="document.createtextnode">document.createTextNode()</h3><p>创建文本</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> content = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createTextNode</span>(<span class="hljs-string">&quot;我是文本&quot;</span>);<br></code></pre></td></tr></table></figure><p>利用 <code>appendChild()</code> 方法可以将文本信息放进节点中</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> newdiv = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br><span class="hljs-keyword">var</span> content = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createTextNode</span>(<span class="hljs-string">&quot;我是文本&quot;</span>);<br>newdiv.<span class="hljs-title function_">appendChild</span>(content);<br></code></pre></td></tr></table></figure><p>这样newdiv就有文本了</p><h3 id="document.createattribute">document.createAttribute()</h3><p>生成一个新的属性节点，并返回</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> id = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>);<br></code></pre></td></tr></table></figure><p>对他进行赋值，可以对<code>value</code> 赋值</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> id = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>);<br>id.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;root&quot;</span>;<br></code></pre></td></tr></table></figure><p>可以用 <code>setAttributeNode()</code> 方法来进行属性赋值</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> text = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;p&quot;</span>);<br><span class="hljs-keyword">var</span> id = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createAttribute</span>(<span class="hljs-string">&quot;id&quot;</span>);<br>id.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;root&quot;</span>;<br>text.<span class="hljs-title function_">setAttributeNode</span>(id);<br></code></pre></td></tr></table></figure><p>这样text就是 <code>&lt;p id="root"&gt;&lt;/p&gt;</code></p><h2 id="属性">属性</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;box&quot;</span> id=<span class="hljs-string">&quot;root&quot;</span>&gt;<span class="hljs-title class_">Hello</span>&lt;/div&gt;<br></code></pre></td></tr></table></figure><h3 id="获取id-element.id">获取id Element.id</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><br>var p = document.getElementById(&quot;root&quot;);<br>console.log(p.id);//root<br></code></pre></td></tr></table></figure><p>也可以进行更改如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">var p = document.getElementById(&quot;root&quot;);<br>p.id = &quot;roots&quot;;<br>console.log(p.id);//roots<br></code></pre></td></tr></table></figure><h2 id="获取classname-element.classname">获取classnameElement.className</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">var p = document.getElementById(&quot;root&quot;);<br>console.log(p.className);//box<br></code></pre></td></tr></table></figure><h3 id="添加删除判断class-element.classlist">添加删除判断classElement.classList</h3><p>提供多个方法</p><ol type="1"><li>add() 添加一个类</li><li>remove() 移除一个类</li><li>contains() 判断是否存在一个类</li><li>toggle 如果存在则删除，如果没有则添加</li></ol><p>　</p><ul><li>删除元素的属性 <code>Element.removeAttribute()</code></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br>p.<span class="hljs-title function_">removeAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>);<br><br></code></pre></td></tr></table></figure><ul><li>获取元素的标签名 <code>Element.tagName</code></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-property">tagName</span>); <span class="hljs-comment">// DIV</span><br><br></code></pre></td></tr></table></figure><ul><li>获取元素的父节点 <code>Element.parentNode</code></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-property">parentNode</span>); <span class="hljs-comment">// &lt;body&gt;...&lt;/body&gt;</span><br><br></code></pre></td></tr></table></figure><ul><li>获取元素的子节点 <code>Element.childNodes</code></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-property">childNodes</span>); <span class="hljs-comment">// NodeList(1) [text]</span><br><br></code></pre></td></tr></table></figure><ul><li>获取元素的下一个兄弟节点 <code>Element.nextSibling</code></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-property">nextSibling</span>); <span class="hljs-comment">// &lt;p&gt;...&lt;/p&gt;</span><br><br></code></pre></td></tr></table></figure><ul><li>获取元素的前一个兄弟节点 <code>Element.previousSibling</code></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-property">previousSibling</span>); <span class="hljs-comment">// &lt;h1&gt;...&lt;/h1&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="改写读取-element.innerhtml">改写/读取 Element.innerHTML</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> root = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br>root.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;Hello World&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(root.<span class="hljs-property">innerHTML</span>);<br></code></pre></td></tr></table></figure><p>第二行为更改root的内容，第三行为读取root的内容</p><h3 id="将标签识别为字符串-element.innertext">将标签识别为字符串Element.innerText()</h3><p>类似 <code>innerHTML</code> 但只会识别为字符串，并不会识别为标签 ###Element获取元素位置</p><ol type="1"><li>clientHeight</li><li>clientWidth</li><li>scrollHeight</li><li>scrollWidth</li><li>scrollLeft</li><li>scrollTop</li><li>offsetHeight</li><li>offsetWidth</li><li>offsetLeft</li><li>offsetTop</li></ol><blockquote><p>应用</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span>); <span class="hljs-comment">//获取屏幕高度</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span>);<span class="hljs-comment">//获取页面高度</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrolltop</span>);<span class="hljs-comment">//获取滚动高度</span><br></code></pre></td></tr></table></figure><h1 id="css操作">CSS操作</h1><h2 id="html-元素的style属性不推荐"><code>HTML</code>元素的style属性(不推荐)</h2><p>使用 <code>setAttribute</code> 来设定属性</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> root = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      root.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;style&quot;</span>, <span class="hljs-string">&quot;background-color:red;&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>  &lt;/body&gt;<br></code></pre></td></tr></table></figure><h2 id="元素节点的-style-属性推荐">元素节点的 <code>style</code>属性(推荐)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">var</span> root = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);</span><br><span class="language-javascript">      root.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundColor</span> = <span class="hljs-string">&quot;red&quot;</span>;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="csstext-属性"><code>CSSText</code> 属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">var</span> root = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);</span><br><span class="language-javascript">      root.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;background:red;&quot;</span>;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="事件处理程序">事件处理程序</h1><ol type="1"><li>HTML事件处理</li><li>DOM0级事件处理</li><li>DOM2级事件处理</li></ol><h2 id="html事件处理">HTML事件处理</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;demo()&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">demo</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>  &lt;/body&gt;<br></code></pre></td></tr></table></figure><blockquote><p>缺点：HTML和JS没分开</p></blockquote><h2 id="dom0级事件处理">DOM0级事件处理</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      btn.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;你好&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>  &lt;/body&gt;<br></code></pre></td></tr></table></figure><blockquote><p>优点：HTML和JS分开</p></blockquote><blockquote><p>缺点：无法同时添加多个事件</p></blockquote><h2 id="dom2级事件处理">DOM2级事件处理</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      btn.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;点我了&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>  &lt;/body&gt;<br></code></pre></td></tr></table></figure><blockquote><p>优点：可以添加多个事件</p></blockquote><blockquote><p>缺点；写起来麻烦</p></blockquote><h1 id="鼠标事件">鼠标事件</h1><ol type="1"><li>click</li><li>dblclick</li><li>mousedown 按下时出发</li><li>mouseup 抬起时出发</li><li>mousemove 移动时出发</li><li>mouseenter</li><li>mouseleave</li><li>mouseover</li><li>mouseout</li><li>wheel</li></ol><h1 id="event事件对象">Event事件对象</h1><h2 id="event属性">Event属性</h2><h3 id="event.target">Event.target</h3><p>返回事件当前所在的节点(点谁，返回谁)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">var</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>);</span><br><span class="language-javascript">      btn.<span class="hljs-property">onmouseenter</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event.<span class="hljs-property">target</span>); <span class="hljs-comment">//&lt;button id=&quot;btn&quot;&gt;点我&lt;/button&gt;</span></span><br><span class="language-javascript">      &#125;;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="event.type">Event.type</h3><p>返回事件类型(如click)</p><h2 id="event方法">Event方法</h2><h3 id="event.preventdefault">Event.preventDefault()</h3><p>阻止默认行为，比如可以阻止链接跳转</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;www.baidu.com&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span>百度一下<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> link = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;link&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      link.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        e.<span class="hljs-title function_">preventDefault</span>();<span class="hljs-comment">//点击链接但不跳转</span></span></span><br><span class="language-javascript"><span class="language-xml">      &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>  &lt;/body&gt;<br></code></pre></td></tr></table></figure><h3 id="event.stoppropagation">Event.stopPropagation()</h3><p>阻止事件冒泡，防止子元素点击来触发父元素</p><h1 id="键盘事件">键盘事件</h1><ol type="1"><li>keydown</li><li>keypress</li><li>keyup</li></ol><blockquote><p>只有当有输入框的时候才有用 ( <code>input</code> 标签)</p></blockquote><p><strong>event对象</strong></p><p>keyCode:唯一标识</p><blockquote><p>可以用于检测是否打回车</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> /&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> password = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;password&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      password.<span class="hljs-property">onkeypress</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">if</span> (e.<span class="hljs-property">keyCode</span> === <span class="hljs-number">13</span>) <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;回车了&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>  &lt;/body&gt;<br><span class="hljs-comment">//点击回车之后便输出&quot;回车了&quot;</span><br></code></pre></td></tr></table></figure><h1 id="表单事件">表单事件</h1><h2 id="input事件">input事件</h2><p>当 <code>&lt;input&gt; &lt;select&gt; &lt;textarea&gt;</code>的值发生变化时触发</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> /&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> username = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;username&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    username.<span class="hljs-property">oninput</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">value</span>);<span class="hljs-comment">//实时读取数据</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><h2 id="select事件">select事件</h2><p>当 <code>&lt;input&gt; &lt;textarea&gt;</code> 里面选中文本时触发</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;select me&quot;</span> /&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> username = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;username&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    username.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;select&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;选中&quot;</span>); <span class="hljs-comment">//选中时候显示选中</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><h2 id="change事件">change事件</h2><p>当 <code>&lt;input&gt; &lt;select&gt; &lt;textarea&gt;</code>的值发生改变时触发。只有当全部修改完成时才会触发</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> /&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> username = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;username&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    username.<span class="hljs-property">onchange</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">value</span>);<span class="hljs-comment">//当修改完后触发</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><blockquote><p>可以用于输入密码后按回车触发</p></blockquote><h2 id="reset事件submit事件">reset事件、submit事件</h2><p>发生在表单对象 <code>&lt;form&gt;</code> 上，而不是表单成员上</p><p>reset事件发生在表单重置时触发</p><p>submit事件发生在表单数据向服务器提交时触发</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;你的服务器地址&quot;</span> =<span class="hljs-string">&quot;myForm&quot;</span> <span class="hljs-attr">onsubmit</span>=<span class="hljs-string">&quot;submitHandle&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;resetbtn&quot;</span>&gt;</span>reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> resetbtn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;resetbtn&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> myForm = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;myForm&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    resetbtn.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      myForm.<span class="hljs-title function_">reset</span>();<span class="hljs-comment">//重置内容</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">submitHandle</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;2131&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><p>当输入完内容并submit后，会在网址处多出来username=xxx，则是向服务器传递该参数</p><h1 id="事件代理">事件代理</h1><blockquote><p>子元素事件可以触发父元素的事件（事件会冒泡向上传播至父节点）</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">var</span> list = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;list&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    list.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">innerHTML</span>); <span class="hljs-comment">//显示li标签内容</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><h1 id="定时器">定时器</h1><p>JS提供定时执行代码的功能，主要由 <code>setTimeout()</code> 和<code>setInterval()</code> 两个函数完成。他们向任务队列添加定时任务</p><h2 id="settimeout">setTimeout()</h2><p><code>setTimeout()</code>函数指定某个函数或某个代码，在多少秒之后执行。返回值为整数表示定时器的编号，用来取消这个定时器。</p><p>它接受两个参数，第一个参数为一个函数名或者一段代码，第二个为推迟执行的毫秒数</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> timerID=<span class="hljs-built_in">setTimeout</span>(fun | code, delay);<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;显示&quot;</span>);<br>    &#125;, <span class="hljs-number">300</span>);<br></code></pre></td></tr></table></figure><blockquote><p><code>setTimeout</code> 使方法内部的 <code>this</code>关键字指向全局变量，而不是所在对象</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;Jack&quot;</span>;<br><span class="hljs-keyword">var</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Ann&quot;</span>,<br>    <span class="hljs-attr">getName</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>);<br>        &#125;, <span class="hljs-number">300</span>);<br>    &#125;,<br>&#125;;<br>user.<span class="hljs-title function_">getName</span>();<span class="hljs-comment">//显示Jack</span><br></code></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;Jack&quot;</span>;<br><span class="hljs-keyword">var</span> user = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Ann&quot;</span>,<br>  <span class="hljs-attr">getName</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> that = <span class="hljs-variable language_">this</span>;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(that.<span class="hljs-property">name</span>);<br>    &#125;, <span class="hljs-number">300</span>);<br>  &#125;,<br>&#125;;<br>user.<span class="hljs-title function_">getName</span>();<span class="hljs-comment">//显示Ann</span><br></code></pre></td></tr></table></figure><p>这样就显示Ann了</p><p>取消定时器(通过 <code>clearTimeout()</code> )</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> id = <span class="hljs-built_in">setTimeout</span>(func, <span class="hljs-number">1000</span>);<br><span class="hljs-built_in">clearTimeout</span>(id);<br></code></pre></td></tr></table></figure><h2 id="setinterval">setInterval()</h2><p>为间隔一段时间，再触发。用法与前者完全一致</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  i++;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<br>&#125;, <span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><h1 id="防抖">防抖</h1><p>在某个时间期限内，连续触发的事件，事件处理函数只执行 一次</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;head&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-selector-tag">h3</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">      <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;</span></span><br><span class="language-css"><span class="language-xml">    &#125;</span></span><br><span class="language-css"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br>&lt;/head&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">fn, delay</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> timer = <span class="hljs-literal">null</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">if</span> (timer) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-built_in">clearTimeout</span>(timer);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        timer = <span class="hljs-built_in">setTimeout</span>(fn, delay);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">scrollHandler</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> scrollTop = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(scrollTop);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">onscroll</span> = <span class="hljs-title function_">debounce</span>(scrollHandler, <span class="hljs-number">200</span>);</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>200毫秒以上再触发停止后才执行一次</p><h1 id="节流">节流</h1><p>解决防抖时若用户一直触发操作但不停止则不执行的问题</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;head&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-selector-tag">h3</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">      <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;</span></span><br><span class="language-css"><span class="language-xml">    &#125;</span></span><br><span class="language-css"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br>&lt;/head&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">throttle</span>(<span class="hljs-params">fn, delay</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> valid = <span class="hljs-literal">true</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">if</span> (!valid) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        valid = <span class="hljs-literal">false</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-title function_">fn</span>();</span></span><br><span class="language-javascript"><span class="language-xml">          valid = <span class="hljs-literal">true</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;, delay);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">onscroll</span> = <span class="hljs-title function_">throttle</span>(scrollHandler, <span class="hljs-number">200</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">scrollHandler</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> scrollTop = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(scrollTop);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>按住不停的动也会在200ms触发一次</p><blockquote><p>应用场景 实时搜索时可以当用户输入完再进行搜索，应用节流操作页面适配时，可以进行实时调整，也就是应用防抖操作</p></blockquote><h1 id="let命令">let命令</h1><p><code>let</code> 命令用来声明变量，类似 <code>var</code> ，但只在<code>let</code> 命令所在的代码块内有效</p><p><code>var</code>关键字是函数级的作用域，只在函数内有效，函数外就无效了</p><p><code>let</code> 关键字是块级作用域(花括号)</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> name1 = <span class="hljs-string">&quot;Ann&quot;</span><br>&#123;<br>    <span class="hljs-keyword">let</span> name1 = <span class="hljs-string">&quot;Jack&quot;</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name1);<span class="hljs-comment">//显示Ann</span><br></code></pre></td></tr></table></figure><blockquote><p>在循环中方便使用</p></blockquote><p><strong>特点:1. 不能变量提升 2.不能重复声明</strong></p><h1 id="const命令">const命令</h1><p>常量</p><p>直接在初始化赋值</p><p>块级作用域</p><h1 id="对象解构赋值">对象解构赋值</h1><p>用于简化面向对象的操作</p><p>可以解构赋值属性</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> user = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Jack&quot;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span><br>&#125;<br><span class="hljs-keyword">const</span> &#123; name, age &#125; = user;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name, age);<span class="hljs-comment">//显示Jack 20</span><br></code></pre></td></tr></table></figure><p>也可以解构赋值方法</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> &#123; log &#125; = <span class="hljs-variable language_">console</span><br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;123&quot;</span>)<span class="hljs-comment">//输出123</span><br></code></pre></td></tr></table></figure><p><strong>不要将一个已经声明的变量进行解构赋值</strong></p><h1 id="字符串扩展">字符串扩展</h1><h2 id="遍历器接口-for-of">遍历器接口 for of</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str = <span class="hljs-string">&quot;Hello&quot;</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">of</span> str) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<span class="hljs-comment">//逐个字符打印Hello</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="字符串模板">字符串模板</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> href = <span class="hljs-string">&quot;www.baidu.com&quot;</span><br><span class="hljs-keyword">var</span> text = <span class="hljs-string">&quot;百度&quot;</span><br><span class="hljs-keyword">var</span> link = <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">$&#123;href&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;text&#125;</span>&lt;/a&gt;`</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(link);<span class="hljs-comment">//显示&lt;a href=&quot;www.baidu.com&quot;&gt;百度&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><h2 id="includes-startswith-endswith">includes(), startsWith(),endsWith()</h2><p>都返回布尔值</p><ol type="1"><li>includes() 返回是否找到参数字符串</li><li>startsWith() 返回参数字符串是否在原字符串头部</li><li>endsWith() 返回参数字符串是否在原字符串尾部</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str = <span class="hljs-string">&quot;Hello Word!&quot;</span><br>str.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<span class="hljs-comment">//true</span><br>str.<span class="hljs-title function_">endsWith</span>(<span class="hljs-string">&#x27;!&#x27;</span>)<span class="hljs-comment">//true</span><br>str.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;o&#x27;</span>)<span class="hljs-comment">//true </span><br></code></pre></td></tr></table></figure><blockquote><p>三个方法都支持第二个参数，表示开始搜索的位置</p></blockquote><h2 id="repeat">repeat()</h2><p>返回一个新字符串，表示将原字符串重复n次</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-string">&#x27;x&#x27;</span>.<span class="hljs-title function_">repeat</span>(<span class="hljs-number">3</span>);<span class="hljs-comment">//xxx</span><br></code></pre></td></tr></table></figure><h2 id="padstart-padend">padStart(), padEnd()</h2><p>用于自动补全长度</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx">str1 = <span class="hljs-string">&#x27;x&#x27;</span>.<span class="hljs-title function_">padStart</span>(<span class="hljs-number">5</span>, <span class="hljs-string">&#x27; &#x27;</span>  )<br>str2 = <span class="hljs-string">&#x27;x&#x27;</span>.<span class="hljs-title function_">padEnd</span>(<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;ab&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str1);<span class="hljs-comment">//ababx</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str2);<span class="hljs-comment">//xaba</span><br></code></pre></td></tr></table></figure><h2 id="trimstart-trimend">trimStart(), trimEnd()</h2><ol type="1"><li>trimStart() 去除前边的空格</li><li>trimEnd() 去除后边的空格</li></ol><h2 id="at">at()</h2><p>返回参数指定位置的字符</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> str = <span class="hljs-string">&quot;Hello Word!&quot;</span><br>str.<span class="hljs-title function_">at</span>(<span class="hljs-number">4</span>)<span class="hljs-comment">//o</span><br></code></pre></td></tr></table></figure><h1 id="数组扩展">数组扩展</h1><h2 id="扩展运算符">扩展运算符</h2><p><code>...</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(...arr);<span class="hljs-comment">//10 20 30 40</span><br></code></pre></td></tr></table></figure><h2 id="取代-apply方法">取代 <code>apply</code>方法</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(...arr));<span class="hljs-comment">//40</span><br></code></pre></td></tr></table></figure><blockquote><p>Math.max不能直接传数组进去，需要扩展，所以可以用 <code>...</code></p></blockquote><h2 id="合并数组">合并数组</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr1 = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-keyword">var</span> arr2 = [<span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">60</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(...arr1, ...arr2);<span class="hljs-comment">//10 20 30 40 20 30 40 60</span><br></code></pre></td></tr></table></figure><blockquote><p>直接用 <code>…</code> 进行合并</p></blockquote><h2 id="array.from">Array.from()</h2><p>将类数组转换为真正的数组</p><blockquote><p>常见类数组： 1. arguments 2. 元素集合 3. 类似数组的对象</p></blockquote><blockquote><p>只能使用数组的读取方式和length属性，不能使用方法如push</p></blockquote><h3 id="arguments">arguments</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">arguments</span>);<br>&#125;<br><span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>)<span class="hljs-comment">//[Arguments] &#123; &#x27;0&#x27;: 10, &#x27;1&#x27;: 20, &#x27;2&#x27;: 30 &#125;</span><br></code></pre></td></tr></table></figure><h3 id="元素集合">元素集合</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;body&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">let</span> titles = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;h3&quot;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(titles);<span class="hljs-comment">//NodeList(3)</span></span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><h3 id="类似数组的对象">类似数组的对象</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> user = &#123;<br>    <span class="hljs-string">&quot;0&quot;</span>: <span class="hljs-string">&quot;jack&quot;</span>,<br>    <span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-number">20</span>,<br>    <span class="hljs-string">&quot;2&quot;</span>: <span class="hljs-string">&quot;男&quot;</span>,<br>    <span class="hljs-attr">length</span>: <span class="hljs-number">3</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user[<span class="hljs-string">&quot;0&quot;</span>]);<span class="hljs-comment">//jack</span><br></code></pre></td></tr></table></figure><p>转换：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">arguments</span>);<span class="hljs-comment">//[Arguments] &#123; &#x27;0&#x27;: 10, &#x27;1&#x27;: 20, &#x27;2&#x27;: 30, &#x27;3&#x27;: 40 &#125;</span><br>    <span class="hljs-keyword">var</span> result = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(<span class="hljs-variable language_">arguments</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result);<span class="hljs-comment">//[ 10, 20, 30, 40 ]</span><br>&#125;<br><br><span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>)<br></code></pre></td></tr></table></figure><p>另外两个同理</p><h2 id="array.of">Array.of()</h2><p>将一组值转换为数组</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">of</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>));<span class="hljs-comment">//[ 10, 20, 30 ]</span><br></code></pre></td></tr></table></figure><h1 id="对象的扩展">对象的扩展</h1><h2 id="属性名">属性名</h2><p>属性名和属性值有相等的变量名称，可以直接省略</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> name1 = <span class="hljs-string">&quot;Jack&quot;</span><br><span class="hljs-keyword">var</span> user = &#123;<br>    name1,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user.<span class="hljs-property">name1</span>);<span class="hljs-comment">//Jack</span><br></code></pre></td></tr></table></figure><h2 id="成员函数">成员函数</h2><p>可以直接写函数</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> name1 = <span class="hljs-string">&quot;Jack&quot;</span><br><span class="hljs-keyword">var</span> user = &#123;<br>    name1,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>,<br>    <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name1);<br>    &#125;<br>&#125;<br>user.<span class="hljs-title function_">getName</span>();<span class="hljs-comment">//Jack</span><br></code></pre></td></tr></table></figure><h2 id="属性名表示法">属性名表示法</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> property = <span class="hljs-string">&quot;Carrer&quot;</span><br><span class="hljs-keyword">var</span> user = &#123;<br>    [property]: <span class="hljs-string">&quot;Docter&quot;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>,<br><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user);<span class="hljs-comment">//&#123; Carrer: &#x27;Docter&#x27;, age: 20 &#125;</span><br></code></pre></td></tr></table></figure><h2 id="对象扩展运算符">对象扩展运算符</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> z = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">b</span>: <span class="hljs-number">20</span><br><br>&#125;<br><span class="hljs-keyword">var</span> n = &#123; ...z &#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(n);<span class="hljs-comment">//&#123; a: 10, b: 20 &#125;</span><br></code></pre></td></tr></table></figure><h1 id="函数的扩展">函数的扩展</h1><p>基本用法 用 <code>=&gt;</code> 代表function</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> <span class="hljs-title function_">fn3</span> = (<span class="hljs-params">x, y</span>) =&gt; x + y<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">fn3</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<span class="hljs-comment">//6</span><br></code></pre></td></tr></table></figure><p>箭头前为参数，箭头后为返回值</p><h2 id="有函数体">有函数体</h2><p>需要在大括号内写全</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> <span class="hljs-title function_">fn3</span> = (<span class="hljs-params">x, y</span>) =&gt; &#123;<br>    <span class="hljs-keyword">var</span> z = <span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">return</span> x + y + z;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">fn3</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<span class="hljs-comment">//16</span><br></code></pre></td></tr></table></figure><h2 id="如果返回值为对象">如果返回值为对象</h2><p>需要套一个括号</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> <span class="hljs-title function_">fn3</span> = (<span class="hljs-params"></span>) =&gt; (&#123; <span class="hljs-attr">x</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">20</span> &#125;)<br></code></pre></td></tr></table></figure><h2 id="应用">应用</h2><p>匿名函数</p><h2 id="注意点">注意点</h2><p>箭头函数中 <code>this</code> 指向上一层作用域的 <code>this</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> name1 = <span class="hljs-string">&quot;Ann&quot;</span><br><span class="hljs-keyword">var</span> user = &#123;<br>    <span class="hljs-attr">name1</span>: <span class="hljs-string">&quot;Jack&quot;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>,<br>    <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span>);<br>        &#125;)<br>    &#125;<br>&#125;<br>user.<span class="hljs-title function_">getName</span>()<span class="hljs-comment">//Jack</span><br></code></pre></td></tr></table></figure><h1 id="set数据结构">Set数据结构</h1><p>Set数据中成员值都是唯一的</p><h2 id="利用构造函数来进行构造">利用构造函数来进行构造</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br>s.<span class="hljs-title function_">add</span>(<span class="hljs-number">20</span>)<br>s.<span class="hljs-title function_">add</span>(<span class="hljs-number">40</span>)<br>s.<span class="hljs-title function_">add</span>(<span class="hljs-number">20</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<span class="hljs-comment">//Set(2) &#123; 20, 40 &#125;</span><br></code></pre></td></tr></table></figure><h2 id="可以用一个数组进行创建">可以用一个数组进行创建</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<span class="hljs-comment">//Set(4) &#123; 10, 20, 30, 40 &#125;</span><br></code></pre></td></tr></table></figure><h3 id="去除数组字符串重复值">去除数组,字符串重复值</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">20</span>, <span class="hljs-number">50</span>]<br><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>([...s]);<span class="hljs-comment">//[ 10, 20, 30, 40, 50 ]</span><br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>([...<span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(str)].<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>));<span class="hljs-comment">//abdecf</span><br></code></pre></td></tr></table></figure><h2 id="size属性">size属性</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br>s.<span class="hljs-title function_">add</span>(<span class="hljs-number">5</span>)<br>s.<span class="hljs-title function_">add</span>(<span class="hljs-number">50</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s.<span class="hljs-property">size</span>);<span class="hljs-comment">//2</span><br></code></pre></td></tr></table></figure><h2 id="delete">delete()</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)<br>s.<span class="hljs-title function_">delete</span>(<span class="hljs-number">10</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<span class="hljs-comment">//Set(3) &#123; 20, 30, 40 &#125;</span><br></code></pre></td></tr></table></figure><h2 id="has">has()</h2><p>判断是否存在</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s.<span class="hljs-title function_">has</span>(<span class="hljs-number">20</span>));<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h2 id="clear">clear()</h2><p>清空</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>]<br><span class="hljs-keyword">var</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)<br>s.<span class="hljs-title function_">clear</span>()<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<span class="hljs-comment">//Set(0) &#123;&#125;</span><br></code></pre></td></tr></table></figure><h1 id="promise对象">Promise对象</h1><p>Promise是一种异步编程的一种解决方案，不需要一层层的回调函数</p><h2 id="基本用法">基本用法</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) &#123;<br>    <span class="hljs-comment">//异步操作代码</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-comment">/* 操作成功*/</span>) &#123;<br>        <span class="hljs-title function_">resolve</span>(value);<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">reject</span>(error);<br>    &#125;<br>&#125;);<br>promise.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) &#123;<br>    <span class="hljs-comment">//success的回调函数</span><br>&#125;, <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>    <span class="hljs-comment">//failure的回调函数</span><br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="ajax实操">Ajax实操</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&lt;!<span class="hljs-variable constant_">DOCTYPE</span> html&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>My website<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> getJSON = <span class="hljs-keyword">function</span> (<span class="hljs-params">url</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">//异步操作</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> handler = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">readystate</span> !== <span class="hljs-number">4</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">return</span>;</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">resolve</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">response</span>);</span></span><br><span class="language-javascript"><span class="language-xml">          &#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">statusText</span>));</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        client.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;GET&quot;</span>, url);</span></span><br><span class="language-javascript"><span class="language-xml">        client.<span class="hljs-property">onreadystatechange</span> = handler;</span></span><br><span class="language-javascript"><span class="language-xml">        client.<span class="hljs-property">responseType</span> = <span class="hljs-string">&quot;json&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        client.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Accept&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        client.<span class="hljs-title function_">send</span>();</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> promise;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">getJSON</span>(<span class="hljs-string">&quot;http://iwenwiki.com/api/blueberrypai/getChengpinDetails.php&quot;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;, <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h1 id="async函数">Async函数</h1><p>async可将异步操作变为同步操作</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">print</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;定时&quot;</span>);<br>    &#125;, <span class="hljs-number">10</span>)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Hello&quot;</span>);<br>&#125;<br><span class="hljs-title function_">print</span>()<span class="hljs-comment">//Hello  定时</span><br></code></pre></td></tr></table></figure><blockquote><p>setTimeout是异步的</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">timeout</span>(<span class="hljs-params">ms</span>) &#123;<br>    <span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;World&quot;</span>);<br>            <span class="hljs-title function_">resolve</span>()<br>        &#125;, ms)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> promise<br>&#125;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">asyncPrint</span>(<span class="hljs-params">ms, value</span>) &#123;<br><br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">timeout</span>(ms);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);<br>&#125;<br><span class="hljs-title function_">asyncPrint</span>(<span class="hljs-number">100</span>, <span class="hljs-string">&quot;hello&quot;</span>)<span class="hljs-comment">//World hello</span><br></code></pre></td></tr></table></figure><blockquote><p>在异步操作函数前加入 await，以及函数前的async</p></blockquote><p>可以使用异步变同步来实现多个具有依赖参数的接口的调用。比如B接口需要A接口的信息，则需要使其变成同步操作</p><h1 id="class">Class</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name1, age</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span> = name1;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span> = age;<br>    &#125;<br>    <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&quot;Jack&quot;</span>, <span class="hljs-number">20</span>)<br>p.<span class="hljs-title function_">getName</span>();<span class="hljs-comment">//Jack</span><br></code></pre></td></tr></table></figure><blockquote><p>constructor 是构造函数</p></blockquote><h2 id="静态方法">静态方法</h2><p>加上一个 <code>static</code>关键字，方法不会被实例继承，而是直接通过类调用</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-title function_">say</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hello&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-title function_">shout</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;wooo&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-title class_">Person</span>.<span class="hljs-title function_">shout</span>();<span class="hljs-comment">//wooo</span><br></code></pre></td></tr></table></figure><blockquote><p>静态方法有 <code>this</code> 则 <code>this</code>表示的是类而不是实例</p></blockquote><h2 id="继承">继承</h2><p>通过 <code>extends</code> 关键字进行继承</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name1, age</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span> = name1;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span> = age;<br>    &#125;<br>    <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Person</span> &#123;<br><br>&#125;<br><br><span class="hljs-keyword">const</span> student = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;John&quot;</span>, <span class="hljs-number">19</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(student.<span class="hljs-title function_">getName</span>());<span class="hljs-comment">//John</span><br></code></pre></td></tr></table></figure><blockquote><p>子类在 <code>constructor()</code>中必须调用 <code>super()</code>方法，否则报错。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name1, age</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span> = name1;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span> = age;<br>    &#125;<br>    <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">name1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Person</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name1, age, schoolNmae</span>) &#123;<br>        <span class="hljs-variable language_">super</span>(name1, age);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">schoolNmae</span> = schoolNmae;<br>    &#125;<br>    <span class="hljs-title function_">getSchool</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;学校&quot;</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">const</span> student = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;John&quot;</span>, <span class="hljs-number">19</span>, <span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(student.<span class="hljs-title function_">getName</span>());<span class="hljs-comment">//John</span><br>student.<span class="hljs-title function_">getSchool</span>();<br></code></pre></td></tr></table></figure><h1 id="module">Module</h1><p><code>export</code> 命令显式指定输出的代码，再通过<code>import</code>命令输入</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">var</span> <span class="hljs-title class_">Hello</span> = <span class="hljs-string">&quot;hello&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Hello</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./JS.js&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Hello</span>);<br></code></pre></td></tr></table></figure><p>如果想起一个新名字，可以用 <code>as</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Hello</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">Hello1</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./JS.js&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Hello1</span>);<br></code></pre></td></tr></table></figure><p>可以用 <code>* as</code> 来指定一个对象</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">var</span> <span class="hljs-title class_">Hello</span> = <span class="hljs-string">&quot;hello&quot;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">var</span> <span class="hljs-title class_">World</span> = <span class="hljs-string">&quot;World&quot;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">var</span> str1 =<span class="hljs-string">&quot;wooo&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> str <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./JS.js&quot;</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str.<span class="hljs-property">Hello</span>);<br></code></pre></td></tr></table></figure><p>可以用 <code>export default</code> 来默认导出</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hahaha&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> func <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./JS.js&quot;</span><br><span class="hljs-title function_">func</span>();<br></code></pre></td></tr></table></figure><blockquote><p>一个文件只能有一个export default</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习之路</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS学习之路</title>
    <link href="/2023/10/06/CSS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <url>/2023/10/06/CSS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="css学习之路">CSS学习之路</h1><p>2️⃣ 学习前端知识的第二步，学习CSS!</p><p><strong>使用CSS的目的: 使网页变得美观！</strong></p><h1 id="语法">语法</h1><p>CSS规则由两个主要的部分组成: 选择器，以及一条或多条声明(样式)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: blue;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="引入方式">引入方式</h1><h2 id="内联样式">内联样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: aqua; font-size: large&quot;</span>&gt;</span>Hello哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>不好</p></blockquote><h2 id="内部样式">内部样式</h2><p>用style标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: blue;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>多个页面就不好了</p></blockquote><h2 id="外部样式推荐">外部样式(推荐)</h2><p>有多个文件时，用外部样式很合理，每个HTML页面用link标签链接到样式表。link标签在文档head部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>My website<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./public.css&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="选择器">选择器</h1><h2 id="全局选择器">全局选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br>      <span class="hljs-attribute">font-size</span>: large;<br>      <span class="hljs-attribute">color</span>: red;<br> &#125;<br></code></pre></td></tr></table></figure><h2 id="元素选择器">元素选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<br><span class="hljs-attribute">font-size</span>: large;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="类选择器">类选择器</h2><blockquote><p>灵活 使用度高</p></blockquote><p>使用一个 . 来定义</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>    <span class="hljs-selector-class">.content</span>&#123;<br>        size: <span class="hljs-number">500px</span>;<br>        <span class="hljs-attribute">color</span>: blue;<br>    &#125;<br>    <span class="hljs-selector-class">.content1</span>&#123;<br>        <span class="hljs-attribute">color</span>: blue;<br>    &#125;<br>&lt;/style&gt;<br>&lt;<span class="hljs-selector-tag">p</span> class=&quot;<span class="hljs-attribute">content</span>&quot;&gt;我是<span class="hljs-number">132</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br><br></code></pre></td></tr></table></figure><p>定义多个类可以加一个空格</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">p</span> class=&quot;<span class="hljs-attribute">content</span> size&quot;&gt;我是<span class="hljs-number">132</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br></code></pre></td></tr></table></figure><blockquote><p>这样他就同时是content类和size类 同时生效</p></blockquote><h2 id="id选择器">ID选择器</h2><p>针对某一个特定的标签使用，只能使用一次。CSS中的ID选择器用#定义</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>  <span class="hljs-selector-id">#test1</span>&#123;<br>      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">800px</span>;<br>      <span class="hljs-attribute">color</span>: burlywood;<br>  &#125;<br>&lt;/style&gt;<br>&lt;<span class="hljs-selector-tag">p</span> id=&quot;test1&quot;&gt;Hello&lt;/<span class="hljs-selector-tag">p</span>&gt;<br></code></pre></td></tr></table></figure><blockquote><p>ID是唯一的 同时不能以数字开头</p></blockquote><h2 id="合并选择器">合并选择器</h2><p>语法：选择器1，选择器2,…{}</p><p>作用：提取共同的样式，减少重复代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.header</span>, <span class="hljs-selector-class">.footer</span>&#123;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">800px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="选择器优先级">选择器优先级</h2><p>权重用数字衡量</p><p>权重：</p><p>元素选择器 1</p><p>class选择器 10</p><p>id选择器 100</p><p>内联样式 1000</p><p>优先级： 行内样式&gt;ID选择器&gt;类选择器&gt;元素选择器</p><h1 id="字体属性">字体属性</h1><h2 id="颜色color">颜色(color)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">color</span>: red;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#ff0000</span>;<br><span class="hljs-attribute">color</span>:<span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br><span class="hljs-attribute">color</span>:<span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">5</span>);<br></code></pre></td></tr></table></figure><h2 id="字体大小font-size">字体大小(font-size)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">font-size</span>:<span class="hljs-number">80px</span>;<br></code></pre></td></tr></table></figure><blockquote><p>Chrome 最小字体是12px</p></blockquote><h2 id="字体粗细font-weight">字体粗细(font-weight)</h2><table><thead><tr class="header"><th>bold</th><th>粗体字符</th></tr></thead><tbody><tr class="odd"><td>bolder</td><td>更粗字符</td></tr><tr class="even"><td>lighter</td><td>细体字符</td></tr><tr class="odd"><td>100-900</td><td>由粗到细</td></tr></tbody></table><h2 id="字体样式font-style">字体样式(font-style)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">font-style</span>: italic;<br></code></pre></td></tr></table></figure><table><thead><tr class="header"><th>normal</th><th>默认</th></tr></thead><tbody><tr class="odd"><td>italic</td><td>斜体</td></tr></tbody></table><h2 id="字体font-family">字体(font-family)</h2><blockquote><p>每个值用逗号隔开，必须加上引号</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;Courier New&quot;</span>, Courier, monospace;<br></code></pre></td></tr></table></figure><h1 id="背景属性">背景属性</h1><h2 id="背景颜色background-color">背景颜色(background-color)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-color</span>: red;<br></code></pre></td></tr></table></figure><h2 id="背景图片background-image">背景图片(background-image)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;rick.jpg&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="平铺方式background-repeat">平铺方式(background-repeat)</h2><table><thead><tr class="header"><th>repeat</th><th>默认</th></tr></thead><tbody><tr class="odd"><td>repeat-x</td><td>只向水平方向平铺</td></tr><tr class="even"><td>repeat-y</td><td>只向垂直方向平铺</td></tr><tr class="odd"><td>no-repeat</td><td>不平铺</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-repeat</span>: no-repeat;<br></code></pre></td></tr></table></figure><h2 id="背景图像大小background-size">背景图像大小(background-size)</h2><table><thead><tr class="header"><th>length</th><th>设置图片宽高，第一个是宽</th></tr></thead><tbody><tr class="odd"><td>percentage</td><td>计算相对位置区域百分比，第一个是宽</td></tr><tr class="even"><td>cover</td><td>保持纵横比并将图片缩放成覆盖背景区域最小大小</td></tr><tr class="odd"><td>contain</td><td>保持纵横比并将图片缩放成覆盖背景区域最大大小</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-size</span>: <span class="hljs-number">50%</span> <span class="hljs-number">40%</span>;<br></code></pre></td></tr></table></figure><h2id="背景图像起始位置background-position">背景图像起始位置(background-position)</h2><p>默认为0% 0%</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background-position</span>: bottom center;<br></code></pre></td></tr></table></figure><table><thead><tr class="header"><th>left top</th></tr></thead><tbody><tr class="odd"><td>right bottom</td></tr><tr class="even"><td>…</td></tr><tr class="odd"><td>center top</td></tr><tr class="even"><td>center center</td></tr><tr class="odd"><td>center bottom</td></tr><tr class="even"><td>…</td></tr><tr class="odd"><td>x% y%</td></tr><tr class="even"><td>xpos ypos</td></tr></tbody></table><h1 id="文本属性">文本属性</h1><h2 id="文本水平对齐方式text-align">文本水平对齐方式(text-align)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">text-align</span>: center;<br></code></pre></td></tr></table></figure><table><thead><tr class="header"><th>left</th><th>居左对齐，默认值</th></tr></thead><tbody><tr class="odd"><td>right</td><td>排列到右边</td></tr><tr class="even"><td>center</td><td>排列到中间</td></tr></tbody></table><h2 id="文本修饰text-decoration">文本修饰(text-decoration)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">text-decoration</span>: overline;<br></code></pre></td></tr></table></figure><table><thead><tr class="header"><th>underline</th><th>下划线</th></tr></thead><tbody><tr class="odd"><td>overline</td><td>上划线</td></tr><tr class="even"><td>line-through</td><td>删除线</td></tr></tbody></table><h2 id="文本大小写text-transform">文本大小写(text-transform)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">text-transform</span>: capitalize;<br></code></pre></td></tr></table></figure><h2id="文本块中首行文本缩进text-indent">文本块中首行文本缩进(text-indent)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">text-indent</span>: <span class="hljs-number">50px</span>;<br></code></pre></td></tr></table></figure><blockquote><p>可以是负值，就是往左移</p></blockquote><h1 id="表格属性">表格属性</h1><h2 id="表格边框border">表格边框(border)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span>,<br><span class="hljs-selector-tag">tr</span>,<br><span class="hljs-selector-tag">td</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid red;<br>&#125;<br></code></pre></td></tr></table></figure><p>3个参数，第一个是边框粗细，第二个是样式(一般为solid)，第三个是颜色</p><img src="/2023/10/06/CSS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/2.png" class="" title="CSS学习之路"><h2 id="折叠边框border-collapse">折叠边框(border-collapse)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span> &#123;<br>  <span class="hljs-attribute">border-collapse</span>: collapse;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2023/10/06/CSS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/3.png" class="" title="CSS学习之路"><h2 id="宽度和高度widthheight">宽度和高度(width,height)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">table</span>&#123;<br><span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>;<br>&#125;<br><span class="hljs-selector-tag">td</span>&#123;<br><span class="hljs-attribute">height</span>:<span class="hljs-number">50px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="文字对齐text-align">文字对齐(text-align)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">text-align</span>: center;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">vertical-align</span>: bottom;<br></code></pre></td></tr></table></figure><h2 id="表格填充">表格填充</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">td</span>&#123;<br><span class="hljs-number">60px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="表格颜色">表格颜色</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">td</span>&#123;<br><span class="hljs-attribute">background-color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="关系选择器">关系选择器</h1><h2 id="后代选择器e-f">后代选择器(E F{})</h2><p>选择所有被E元素包含的F元素，中间用空格隔开</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">E F&#123;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">ul</span>&gt;<br>  &lt;<span class="hljs-selector-tag">li</span>&gt;<span class="hljs-number">12</span>&lt;/<span class="hljs-selector-tag">li</span>&gt;<br>  &lt;<span class="hljs-selector-tag">li</span>&gt;<span class="hljs-number">34</span>&lt;/<span class="hljs-selector-tag">li</span>&gt;<br>&lt;/<span class="hljs-selector-tag">ul</span>&gt;<br><br><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: red;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="子代选择器ef">子代选择器(E&gt;F{})</h2><p>选择所有作为E元素的直接子元素F，对深一层的元素不起作用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">E&gt;F&#123;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">ul</span>&gt;<br>  &lt;<span class="hljs-selector-tag">li</span>&gt;<span class="hljs-number">12</span>&lt;/<span class="hljs-selector-tag">li</span>&gt;<br>  &lt;<span class="hljs-selector-tag">li</span>&gt;<span class="hljs-number">34</span>&lt;/<span class="hljs-selector-tag">li</span>&gt;<br>&lt;/<span class="hljs-selector-tag">ul</span>&gt;<br><br><span class="hljs-selector-tag">ul</span>&gt;<span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: red;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="相邻兄弟选择器ef">相邻兄弟选择器(E+F{})</h2><p>选择紧跟E元素后边的F元素，选择相邻的第一个兄弟元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">E+F&#123;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">h1</span>&gt;<span class="hljs-number">123</span>&lt;/<span class="hljs-selector-tag">h1</span>&gt;<br>&lt;<span class="hljs-selector-tag">p</span>&gt;<span class="hljs-number">45345</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br>&lt;<span class="hljs-selector-tag">p</span>&gt;<span class="hljs-number">7892</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br><br><span class="hljs-selector-tag">h1</span> + <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: brown;<br>&#125;<br></code></pre></td></tr></table></figure><p>只有下边的第一个p标签的字是棕色</p><h2 id="通用兄弟选择器ef">通用兄弟选择器(E~F{})</h2><p>选择E元素之后的所有兄弟元素F，作用于多个元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">E~F&#123;&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">h1</span>&gt;<span class="hljs-number">123</span>&lt;/<span class="hljs-selector-tag">h1</span>&gt;<br>&lt;<span class="hljs-selector-tag">p</span>&gt;<span class="hljs-number">45345</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br>&lt;<span class="hljs-selector-tag">p</span>&gt;<span class="hljs-number">7892</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br><br><span class="hljs-selector-tag">h1</span> ~ <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: brown;<br>&#125;<br></code></pre></td></tr></table></figure><p>所有h1后边的p标签的字都是棕色</p><h1 id="盒子模型">盒子模型</h1><img src="/2023/10/06/CSS%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/4.jpg" class="" title="CSS学习之路"><h1 id="弹性盒子模型">弹性盒子模型</h1><p>由弹性容器(Flex Container)和弹性子元素(Flex Item)组成</p><p>弹性容器设置 <code>display</code>属性为 <code>flex</code>可定义为弹性容器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;container&quot;&gt;<br>  &lt;<span class="hljs-selector-tag">div</span> class=&quot;box1&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>  &lt;<span class="hljs-selector-tag">div</span> class=&quot;box2&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>  &lt;<span class="hljs-selector-tag">div</span> class=&quot;box3&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;/<span class="hljs-selector-tag">div</span>&gt;<br><br><span class="hljs-selector-class">.container</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="容器的属性">容器的属性</h2><h3 id="flex-direction属性">flex-direction属性</h3><p>定义了子元素在容器中的位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">flex-direction</span>: row | row-reverse | column | column-reverse;<br></code></pre></td></tr></table></figure><ol type="1"><li>row 从左到右横向排列，默认的</li><li>row-reverse 反转横向排列</li><li>column 纵向排列</li><li>column-reverse: 反转纵向排列</li></ol><h3 id="justify-content属性">justify-content属性</h3><p>内容的垂直方向对齐</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">justify-content</span>: flex-start | flex-end | center<br></code></pre></td></tr></table></figure><ol type="1"><li>flex-start 在最顶头</li><li>flex-end 最末尾</li><li>center中间</li></ol><h3 id="align-items属性">align-items属性</h3><p>内容的水平方向对齐</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">align-items</span>: flex-start | flex-end | center<br></code></pre></td></tr></table></figure><ol type="1"><li>flex-start 在最顶头</li><li>flex-end 最末尾</li><li>center中间</li></ol><h2 id="子元素属性">子元素属性</h2><h3 id="flex属性">flex属性</h3><p>设置子元素在容器中的大小的比率</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box1</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">3</span>;<br>&#125;<br><span class="hljs-selector-class">.box2</span>&#123;<br>  <span class="hljs-attribute">flex</span>:<span class="hljs-number">2</span><br>&#125;<br></code></pre></td></tr></table></figure><p>这样的话，box1占3/5，box2占2/5</p><h1 id="浮动">浮动</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">float</span><span class="hljs-selector-pseudo">:left</span> | <span class="hljs-attribute">right</span>;<br></code></pre></td></tr></table></figure><p>可以使元素脱离文档流，并并排显示</p><p>宽度不够将换行显示</p><h1 id="清除浮动">清除浮动</h1><p>清除原因：</p><ol type="1"><li>浮动元素会导致父元素高度塌陷</li><li>后续元素会受到影响</li></ol><p>解决措施：</p><h2 id="给父元素设置高度不推荐">给父元素设置高度(不推荐)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span>&#123;<br><span class="hljs-attribute">width</span>:<span class="hljs-number">500px</span>;<br><span class="hljs-attribute">height</span>:<span class="hljs-number">500px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果浮动元素高度不固定就不合适</p><h2 id="受影响的元素增加clear属性">受影响的元素增加clear属性</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box1</span>&#123;<br><span class="hljs-attribute">clear</span>:both | left | right;<br>&#125;<br></code></pre></td></tr></table></figure><p>谁受影响谁就加上clear的属性，一般使用both</p><h2 id="overflow清除浮动最常用">overflow清除浮动(最常用)</h2><p>父布局不能设置高度的情况下，加入overflow:hidden;和clear:both;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span>&#123;<br><span class="hljs-attribute">overflow</span>:hidden;<br><span class="hljs-attribute">clear</span>:both;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="伪对象方式">伪对象方式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span><span class="hljs-selector-pseudo">::after</span>&#123;<br><span class="hljs-attribute">content</span>:<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-attribute">display</span>:block;<br><span class="hljs-attribute">clear</span>:both;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="定位">定位</h1><h2 id="相对定位position-relative">相对定位(position: relative)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">position</span>: relative;<br><span class="hljs-attribute">left</span>:<span class="hljs-number">10px</span>;<br><span class="hljs-attribute">top</span>:<span class="hljs-number">10px</span>;<br></code></pre></td></tr></table></figure><p>在文档流里边，不会有遮盖</p><h2 id="绝对定位position-absolute">绝对定位(position: absolute)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">left</span>:<span class="hljs-number">10px</span>;<br><span class="hljs-attribute">top</span>:<span class="hljs-number">10px</span>;<br></code></pre></td></tr></table></figure><p>脱离文档流，会有遮盖</p><h2 id="固定定位positionfixed">固定定位(position:fixed)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">position</span>:fixed<br>left:<span class="hljs-number">10px</span>;<br><span class="hljs-attribute">top</span>:<span class="hljs-number">10px</span>;<br></code></pre></td></tr></table></figure><p>不管页面怎么滚动，他都在那个位置</p><blockquote><p>相对定位和绝对定位是根据具有定位的父级元素进行定位的，如果不存在则逐级向上寻找，直到顶层文档</p></blockquote><h2 id="z-index">z-index</h2><p>绝对覆盖顺序,数值大覆盖数值小的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">z-index</span>:<span class="hljs-number">80</span>;<br></code></pre></td></tr></table></figure><h1 id="css3特性">CSS3特性</h1><h2 id="圆角border-radius">圆角(border-radius)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">border-radius</span>:<span class="hljs-number">80px</span>;<br></code></pre></td></tr></table></figure><p>如果想变成圆形就写100%</p><p>可以有四个值，分别代表四个圆角值</p><h2 id="阴影box-shadow">阴影(box-shadow)</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">box-shadow</span>: h-shadow v-shadow blur color;<br></code></pre></td></tr></table></figure><ol type="1"><li>h-shadow 必选，水平阴影位置</li><li>v-shadow 必选，垂直阴影位置</li><li>blur 可选，模糊距离</li><li>color 可选，阴影的颜色</li></ol><h2 id="动画keyframes">动画(keyframes)</h2><p>可以用百分比来规定变化时间，也可以用”from”和”to”</p><p>利用@keyframes. Name需要写动画名称。百分比也可以写很多个</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@keyframes</span> Name &#123;<br>  <span class="hljs-selector-tag">from</span> | <span class="hljs-number">0%</span> &#123;<br>    css样式<br>  &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    样式<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">animation</span>: name duration timing-function delay iteration-count direction;<br></code></pre></td></tr></table></figure><p>name: 动画名称</p><p>duration: 持续时间，需要加单位</p><p>timing-function: 动画效果速率</p><p>delay: 开始时间，需要加单位</p><p>iteration-count: 循环次数，infinite为无限循环</p><p>direction: 动画播放方向</p><p>animation-play-state: 播放状态，running为播放，paused为停止</p><table><thead><tr class="header"><th>timing-function值</th><th>描述</th></tr></thead><tbody><tr class="odd"><td>ease</td><td>逐渐变慢(默认)</td></tr><tr class="even"><td>linear</td><td>匀速</td></tr><tr class="odd"><td>ease-in</td><td>加速</td></tr><tr class="even"><td>ease-out</td><td>减速</td></tr><tr class="odd"><td>ease-in-out</td><td>先加速后减速</td></tr></tbody></table><table><thead><tr class="header"><th>direction值</th><th>描述</th></tr></thead><tbody><tr class="odd"><td>normal</td><td>向前播放(默认)</td></tr><tr class="even"><td>alternate</td><td>偶数次向前，奇数次反方向</td></tr></tbody></table><h3 id="鼠标触发动画hover">鼠标触发动画(hover)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br><span class="hljs-attribute">animation-play-state</span>: paused;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样鼠标划上去，动画暂停</p><h1 id="媒体查询">媒体查询</h1><h2 id="设置meta标签">设置meta标签</h2><p>使用设备宽度作为视图宽度并禁止初始的缩放。需要在<code>&lt;head&gt;</code> 标签中加入 <code>&lt;meta&gt;</code> 标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;meta name=&quot;viewport&quot; <span class="hljs-attribute">content</span>=&quot;<span class="hljs-attribute">width</span>=device-<span class="hljs-attribute">width</span>,initial-scal=<span class="hljs-number">1</span>,maximum-scale=<span class="hljs-number">1</span>,user-scalable=no&quot;&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">768px</span>) &#123;<br>  <span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: aliceblue;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">992px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) &#123;<br>  <span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: blue;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">992px</span>) &#123;<br>  <span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: yellow;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>将根据屏幕的大小显示不同的东西</p><h1 id="雪碧图">雪碧图</h1><p>优点：</p><ol type="1"><li>减少图片字节</li><li>减少网页请求次数</li></ol><p>原理：</p><p>将一个大图加载进去，然后通过background-position把图片移动到需要的位置</p><h1 id="字体图标">字体图标</h1><p>优点：</p><ol type="1"><li>加载快，减少http请求</li><li>可以利用CSS设置大小颜色</li><li>支持所有浏览器</li></ol><p><ahref="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p><p>去网站选择图标，然后下载代码，然后选择 <code>font-class</code>使用</p>]]></content>
    
    
    <categories>
      
      <category>学习之路</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML学习之路</title>
    <link href="/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <url>/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="html学习之路">HTML学习之路</h1><p>1️⃣学习前端知识的第一步，学习HTML!</p><h1 id="初始代码">初始代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最开始都需要这两行代码</p><h1 id="标签">标签</h1><h2 id="html标签">html标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>html标签用来限定整个文档的开始和结束</p><h2 id="head标签">head标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>head标签用来描述文档的信息，不会给用户看</p><h2 id="body标签">body标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>body标签用来定义文档主体，包含所有内容，直接展示给用户</p><h2 id="tittle标签">tittle标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>My website<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>title标签会显示在浏览器的标题栏中，是head标签中唯一要求包含的东西，写head必须写title</p><h2 id="meta标签">meta标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>My website<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>meta标签用于描述一个HTML网页的属性，关键词等。比如UTF-8就是编码格式</p><h1 id="标题标签">标题标签</h1><p>标题通过 h1-h6进行定义</p><p>h1最大，h6最小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>**生成h1~h6快捷键：h$*6**</p></blockquote><p>标题应该根据内容去区分</p><h2 id="标题摆放的位置"><strong>标题摆放的位置</strong></h2><p>通过在标签中添加属性 align=”left | center | right”，默认是左</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="段落换行水平线标签">段落、换行、水平线标签</h1><h2 id="段落标签">段落标签</h2><p>通过p来定义段落</p><h2 id="换行">换行</h2><p>通过br来换行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这个段落可以<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>换行<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="水平线">水平线</h2><p>通过hr来创建水平线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ol type="1"><li>color: 水平线的颜色</li><li>width: 水平线长度</li><li>size: 水平线的高度</li><li>align: 水平线对齐方式，可取left | right</li></ol><h1 id="图片标签">图片标签</h1><p>通过img标签来定义图像</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ol type="1"><li>src: 路径</li><li>alt: 规定图像的替代文本(图片显示不出来时候显示的文本)</li><li>width: 图片宽度</li><li>height: 图像高度</li><li>title: 鼠标停在图片上给出的提示</li></ol><h1 id="路径">路径</h1><h2 id="绝对路径"><strong>绝对路径</strong></h2><p>如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span><span class="hljs-attr">C:</span>\<span class="hljs-attr">Users</span>\<span class="hljs-attr">Jack1</span>\<span class="hljs-attr">Desktop</span>\<span class="hljs-attr">rick.jpg</span>&quot;&quot;&gt;</span><br></code></pre></td></tr></table></figure><h2 id="相对路径"><strong>相对路径</strong></h2><ol type="1"><li>子级关系: /</li><li>父级关系: ../</li><li>同级关系: ./</li></ol><h2 id="网络路径"><strong>网络路径</strong></h2><p>网络地址</p><h1 id="超文本链接标签">超文本链接标签</h1><p>使用a来定义超文本链接</p><p>超链接可以是一个字，一个词，一句话，一幅图。点进这个内容跳转新的地方</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span>链接文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="文本标签">文本标签</h1><table><thead><tr class="header"><th>标签</th><th>描述</th></tr></thead><tbody><tr class="odd"><td>em</td><td>着重文字</td></tr><tr class="even"><td>b</td><td>粗体文字</td></tr><tr class="odd"><td>i</td><td>斜字体</td></tr><tr class="even"><td>strong</td><td>加重语气</td></tr><tr class="odd"><td>del</td><td>删除字</td></tr><tr class="even"><td>span</td><td>元素没有特定的含义</td></tr></tbody></table><p>文本标签可以嵌套在段落 p 标签中的</p><h1 id="列表标签">列表标签</h1><h2 id="有序列表">有序列表</h2><p>有序列表标签始于 ol 标签，每个列表项始于 li 标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><p>结果将是：</p><p>1.第一项</p><p>2.第二项</p><h3 id="属性">属性</h3><ol><p>的属性有</p><ol type="1"><li>1 表示用数字标号(1,2,3,…)</li><li>a 表示用小写字母标号(a,b,c,…)</li><li>A 表示用大写字母标号(A,B,C,…)</li><li>i 表示用小写罗马数字标号(i,ii,iii,….)</li><li>I 表示用大写罗马数字标号(I,II,III,…)</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="嵌套">嵌套</h3><p>有序列表可以进行嵌套</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;A&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一小项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二小项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="无序列表">无序列表</h2><p>无序列表标签始于 ul 标签，每个列表项始于li标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二项<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>结果将是：</p><p>·第一项</p><p>·第二项</p><h3 id="属性-1">属性</h3><p>ul 的属性有</p><ol type="1"><li>disc 默认实心圆</li><li>circle 空心圆</li><li>square 方块</li><li>none 不显示</li></ol><h3 id="嵌套-1">嵌套</h3><p>同有序列表一样，可以嵌套</p><h3 id="应用场景">应用场景</h3><p>导航效果</p><blockquote><p>快速生成ul+li的布局: ul&gt;li*3 (数字可调整)</p></blockquote><h1 id="表格">表格</h1><p>标签分为：</p><p>表格: table</p><p>行: tr</p><p>列: td</p><blockquote><p>快速生成表格结构: table&gt;tr*2&gt;td{单元格}</p></blockquote><h2 id="属性-2">属性</h2><ol type="1"><li>border: 表格边框</li><li>width: 表格宽度</li><li>height: 表格高度</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="合并单元格">合并单元格</h2><p>水平合并: colspan</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>1 2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>水平合并，保留左边，删除右边</p></blockquote><p>垂直合并: rowspan</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>4 5<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>垂直合并，删除下边，删除上边</p></blockquote><h1 id="表单">表单</h1><p>通过 form 来定义表单</p><p>表单由容器和控件组成。一般拥有用户填写信息的 <strong>输入框</strong>和 <strong>提交按钮</strong>等。输入框和按钮叫控件，表单就是容器，能容纳各种各样的空间</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get|post&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myform&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><ol type="1"><li>action 服务器地址</li><li>name 表单名称</li><li>method: 数据提交方式，分为get,post<ol type="1"><li>提交的数据的url，get可以看到，post看不到</li><li>get一般用于提交少量数据，post用来提交大量数据</li></ol></li></ol><h2 id="表单元素">表单元素</h2><p>表单包含三个基本组成部分: 表单标签，表单域，表单按钮</p><ol type="1"><li>表单标签</li><li>表单域</li><li>表单按钮</li></ol><h3 id="文本框">文本框</h3><p>通过 input type=”text 标签定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>First name:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">Firstname</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/1.png" class="" title="HTML学习之路"><h3 id="密码框">密码框</h3><p>通过 input type=”password” 标签定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>password:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/2.png" class="" title="HTML学习之路"><h3 id="提交按钮">提交按钮</h3><p>通过 input type=”submit” 标签定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/3.png" class="" title="HTML学习之路"><h1 id="块元素和内联元素">块元素和内联元素</h1><table><thead><tr class="header"><th>块级元素</th><th>内联元素</th></tr></thead><tbody><tr class="odd"><td>块元素会在页面独占一行(自上向下垂直排列)</td><td>内联元素只占自身大小</td></tr><tr class="even"><td>可以设置width,height属性</td><td>无法设置width,height属性</td></tr><tr class="odd"><td>块级元素一般可以包含行内元素和其他块级元素</td><td>内联元素包含内联元素不包含块级元素</td></tr></tbody></table><p>常见块级元素</p><blockquote><p>div, form, h1~h6, hr, p, table, ul 等</p></blockquote><p>常见内联元素</p><blockquote><p>a, b, em, i, span, strong 等</p></blockquote><p>行内块元素(不换行，能设置宽高)</p><blockquote><p>button, img, input 等</p></blockquote><h1 id="h5新增标签">H5新增标签</h1><h2 id="预备知识">预备知识</h2><p>div容器元素</p><p>传统页面布局</p><img src="/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/4.jpg" class="" title="HTML学习之路"><h2 id="h5新标签">H5新标签</h2><img src="/2023/10/05/HTML%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/5.jpg" class="" title="HTML学习之路">]]></content>
    
    
    <categories>
      
      <category>学习之路</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于AWTRIX改造的智能机器人</title>
    <link href="/2023/09/30/%E5%9F%BA%E4%BA%8EAWTRIX%E6%94%B9%E9%80%A0%E7%9A%84%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <url>/2023/09/30/%E5%9F%BA%E4%BA%8EAWTRIX%E6%94%B9%E9%80%A0%E7%9A%84%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="awtrix-project">AWTRIX Project</h1><p>本项目基于 <strong><ahref="https://awtrixdocs.blueforcer.de/#/en-en/awtrix_family">AWTRIX</a></strong>制作</p><h2 id="项目要实现的目标有">项目要实现的目标有：</h2><ol type="1"><li>连接ChatGPT</li><li>进行STT(Speech to Text) 与TTS(Text to Speech)功能的实现</li><li>与原始项目AWTRIX的显示屏进行对接</li></ol><h2 id="涉及到的技术栈">涉及到的技术栈</h2><p><strong>开发板、传感器</strong>如：ESP32、d1mini(ESP8266)、麦克风、喇叭</p><p><strong>IDE</strong>: Arduino IDE 、B4J、VScode</p><p><strong>编程语言</strong>：C、Python、VB</p><p><strong>后端框架</strong>：Flask</p><h2 id="连接chatgpt">连接ChatGPT</h2><p>通过创建OpenAI账号、申请到免费的额度然后利用其提供的API_key来调用ChatGPT的API。唯一不足就是调用设备需要挂梯子才能使用<br /></p><p>这里后端采用的是Flask框架，是一个非常简单的Web框架，利用Python可以非常迅速的上手写接口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request<br><span class="hljs-keyword">import</span> openai<br><br>app = Flask(__name__)<br><br>openai.api_key = <span class="hljs-string">&quot;我的APIkey&quot;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/ChatGPT&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ChatGPT</span>():<br>    prompt = request.args.get(<span class="hljs-string">&#x27;prompt&#x27;</span>)<br>    model_engine = <span class="hljs-string">&quot;text-davinci-003&quot;</span><br><br>    completions = openai.Completion.create(<br>        engine=model_engine,<br>        prompt=prompt,<br>        max_tokens=<span class="hljs-number">1024</span>,<br>        n=<span class="hljs-number">1</span>,<br>        stop=<span class="hljs-literal">None</span>,<br>        temperature=<span class="hljs-number">0.5</span>,<br>    )<br>    message = completions.choices[<span class="hljs-number">0</span>].text<br>    <span class="hljs-keyword">return</span> message<br></code></pre></td></tr></table></figure><p>通过Postman去测试这个API可以得到理想的答案</p><img src="/2023/09/30/%E5%9F%BA%E4%BA%8EAWTRIX%E6%94%B9%E9%80%A0%E7%9A%84%E6%99%BA%E8%83%BD%E6%9C%BA%E5%99%A8%E4%BA%BA/1.jpg" class="" title="基于AWTRIX改造的智能机器人"><p>这样的话，连接ChatGPT的功能模块就做完了</p><h2 id="ttstext-to-speech功能">TTS(Text to Speech)功能</h2><p><strong><em>(敬请期待)</em></strong></p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>物联网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些名词解释</title>
    <link href="/2023/09/23/%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/"/>
    <url>/2023/09/23/%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="一些名词解释">一些名词解释</h1><p><strong><em>大部分的解释都来自网上</em></strong></p><h2 id="latent-space">Latent Space</h2><p>隐空间/潜在空间</p><p>隐空间是<strong>压缩数据的一个表示</strong>。隐空间的作用是为了找到 <strong>模式</strong>(<code>pattern</code>)而学习数据特征并且简化数据表示。</p><img src="/2023/09/23/%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/0.jpg" class="" title="一些名词解释"><p>简单来讲呢就是在低维度的空间下，同类型的东西会十分接近。比如下面三个图的两把椅子在潜空间下便十分相似，与桌子将有十分大的差别。</p><img src="/2023/09/23/%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/1.jpg" class="" title="一些名词解释"><img src="/2023/09/23/%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/2.jpg" class="" title="一些名词解释"><img src="/2023/09/23/%E4%B8%80%E4%BA%9B%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/3.jpg" class="" title="一些名词解释">]]></content>
    
    
    <categories>
      
      <category>名词解释</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图像编辑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DragGAN(交互的基于点的图像操作)</title>
    <link href="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/"/>
    <url>/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1id="draggan交互的基于点的图像操作">DragGAN(交互的基于点的图像操作)</h1><h2 id="基础">基础</h2><p>StyleGAN2</p><h2 id="优点">优点</h2><ol type="1"><li>可以进行多点操作</li><li>可以使handle points 准确的接近 target points</li></ol><h2 id="方法简略版">方法(简略版)</h2><ol type="1"><li>对handle points 进行监督，使其向target进行移动</li><li>对handle points 进行追踪，使得他们每走一步都已知他们的位置</li></ol><h2 id="方法详细版">方法(详细版)</h2><p>得到一个图像的图 <spanclass="math inline">\(I\)</span>以及他的潜在编码 <spanclass="math inline">\(w\)</span>, 然后进行优化。</p><p>优化分为两步，一个是 <strong>motion supervision</strong> 和<strong>point tracking</strong> 然后将得到新的图像 <spanclass="math inline">\(I’\)</span>和新的潜在编码 <spanclass="math inline">\(w’\)</span>.</p><ol type="1"><li><p><strong>Motion Supervision</strong></p><p>利用生成器中间特征十分具有辨识度的特征进行loss计算。特征图 <spanclass="math inline">\(F\)</span>在StyleGAN2的第6个block后是最好的。</p><p>移动 <span class="math inline">\(p_i\)</span> 到 <spanclass="math inline">\(t_i\)</span>的步骤是通过计算loss.</p><img src="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/1.jpg" class="" title="DragGAN-交互的基于点的图像操作"><img src="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/2.jpg" class="" title="DragGAN-交互的基于点的图像操作"><p>这个loss用来优化潜在编码 <span class="math inline">\(w\)</span>,且只优化前6层</p></li><li><p><strong>Point Tracking</strong></p><p>目标是:更新每个handle points <spanclass="math inline">\(p_i\)</span></p><p>方法是:在一个特征patch上进行Nearest Neighbor search</p></li></ol><h2 id="评价指标">评价指标</h2><ol type="1"><li><p><span class="math inline">\(d(Edit Point,Target Point)\)</span>编辑点与目标点的平均距离</p></li><li><p><span class="math inline">\(FID\)</span>反应两组图像的相似度。生成图和真实图特征向量间距离。越小越像</p></li><li><p>时间</p></li><li><p><span class="math inline">\(MSE\)</span> Mean Square Error均方误差</p></li><li><p><span class="math inline">\(LPIPS\)</span> Learned PerceptualImage Patch Similarity 学习感知图像快相似度 衡量两张图的差别越小越像</p></li><li><p><span class="math inline">\(MD\)</span> mean distance平均距离</p><img src="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/3.jpg" class="" title="DragGAN-交互的基于点的图像操作"><img src="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/4.jpg" class="" title="DragGAN-交互的基于点的图像操作"><img src="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/5.jpg" class="" title="DragGAN-交互的基于点的图像操作"><img src="/2023/09/21/DragGAN-%E4%BA%A4%E4%BA%92%E7%9A%84%E5%9F%BA%E4%BA%8E%E7%82%B9%E7%9A%84%E5%9B%BE%E5%83%8F%E6%93%8D%E4%BD%9C/6.jpg" class="" title="DragGAN-交互的基于点的图像操作"></li></ol><p>主要baseline是UserControllableLT</p><h2 id="定量评价">定量评价</h2><p><em>Face landmark manipulation</em></p><p>利用off-the-shelf tool的预测作为ground truth.然后利用DragGAN进行manipulation然后计算得到图片与ground truth做meandistance(MD).MD可作为评价方法移动的好坏。同时计算了FID.最大优化步骤为300</p><p><em>Paired image reconstruction</em></p><p>利用和UserControllerableLT同样的设置。利用 <spanclass="math inline">\(w_1\)</span>和 <spanclass="math inline">\(w_2\)</span>生成 <spanclass="math inline">\(I_1\)</span>和 <spanclass="math inline">\(I_2\)</span>。并选取32个像素作为 <spanclass="math inline">\(U\)</span>并与 <spanclass="math inline">\(I_1\)</span>作为输入。来重建 <spanclass="math inline">\(I2\)</span>。最大优化步骤为100</p><p><em>Ablation Study</em></p><p>研究表明StyleGAN第6块后特征图表现最佳。</p><h2 id="讨论">讨论</h2><ol type="1"><li>遮罩对移动有影响</li><li>Manipulation 具有超出分布的可能。防止这种情况可以增加正则化</li><li>局限性 编辑质量受训练集的影响</li></ol>]]></content>
    
    
    <categories>
      
      <category>科研论文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图像编辑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>欢迎来到我的博客</title>
    <link href="/2023/07/25/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/07/25/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到我的博客">欢迎来到我的博客</h1><p>这里是一个某不知名211大学的软件工程的程序猿。</p><p>平时喜欢瞎玩各种乱七八糟的东西。软硬件可能都玩一些。</p><p>我将在这里分享一些我读的科研论文以及一些技术的心得体会。有时候也可以去写一些个人日记。欢迎收藏我的网站</p><p><strong><em>Sky’s not my limit</em></strong></p><img src="/2023/07/25/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/%E6%AC%A2%E8%BF%8E%E9%A1%B5.jpg" class="" title="欢迎来到我的博客">]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
